%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: ./Listing.ps
%%For: Edwin Kingman Wang
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Sun Oct 27 21:05:49 2019
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier-Bold /F-gs-font MF
/F-gs-font 11 11 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 708 def
/d_header_w 536 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 708 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (commands.h) def
/fdir (.) def
/ftail (commands.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: commands.h,v 1.12 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#ifndef __COMMANDS_H__) s
32.4 658 M (4:) s
52.2 658 M
(#define __COMMANDS_H__) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(#include <unordered_map>) s
32.4 622 M (7:) s
52.2 622 M
(using namespace std;) s
32.4 610 M (8:) s
32.4 598 M (9:) s
52.2 598 M
(#include "file_sys.h") s
25.8 586 M (10:) s
52.2 586 M
(#include "util.h") s
25.8 574 M (11:) s
25.8 562 M (12:) s
52.2 562 M
(// A couple of convenient usings to avoid verbosity.) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(using command_fn = void \(*\)\(inode_state& state, const wordvec& words\);) s
25.8 526 M (15:) s
52.2 526 M
(using command_hash = unordered_map<string,command_fn>;) s
25.8 514 M (16:) s
25.8 502 M (17:) s
52.2 502 M
(// execution functions -) s
25.8 490 M (18:) s
25.8 478 M (19:) s
52.2 478 M
(void fn_cat    \(inode_state& state, const wordvec& words\);//) s
25.8 466 M (20:) s
52.2 466 M
(void fn_cd     \(inode_state& state, const wordvec& words\);//) s
25.8 454 M (21:) s
52.2 454 M
(void fn_echo   \(inode_state& state, const wordvec& words\);) s
25.8 442 M (22:) s
52.2 442 M
(void fn_exit   \(inode_state& state, const wordvec& words\);) s
25.8 430 M (23:) s
52.2 430 M
(void fn_ls     \(inode_state& state, const wordvec& words\);//) s
25.8 418 M (24:) s
52.2 418 M
(void fn_lsr    \(inode_state& state, const wordvec& words\);) s
25.8 406 M (25:) s
52.2 406 M
(void fn_make   \(inode_state& state, const wordvec& words\);//) s
25.8 394 M (26:) s
52.2 394 M
(void fn_mkdir  \(inode_state& state, const wordvec& words\);//) s
25.8 382 M (27:) s
52.2 382 M
(void fn_prompt \(inode_state& state, const wordvec& words\);//) s
25.8 370 M (28:) s
52.2 370 M
(void fn_pwd    \(inode_state& state, const wordvec& words\);//) s
25.8 358 M (29:) s
52.2 358 M
(void fn_rm     \(inode_state& state, const wordvec& words\);) s
25.8 346 M (30:) s
52.2 346 M
(void fn_rmr    \(inode_state& state, const wordvec& words\);) s
25.8 334 M (31:) s
52.2 334 M
(void fn_nothing \(inode_state& state, const wordvec& words\);) s
25.8 322 M (32:) s
25.8 310 M (33:) s
52.2 310 M
(command_fn find_command_fn \(const string& command\);) s
25.8 298 M (34:) s
25.8 286 M (35:) s
52.2 286 M
(// exit_status_message -) s
25.8 274 M (36:) s
52.2 274 M
(//    Prints an exit message and returns the exit status, as recorded) s
25.8 262 M (37:) s
52.2 262 M
(//    by any of the functions.) s
25.8 250 M (38:) s
25.8 238 M (39:) s
52.2 238 M
(int exit_status_message\(\);) s
25.8 226 M (40:) s
52.2 226 M
(class ysh_exit: public exception {};) s
25.8 214 M (41:) s
25.8 202 M (42:) s
52.2 202 M
(#endif) s
_R
S
%%Page: (1) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (commands.cpp) def
/fdir (.) def
/ftail (commands.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: commands.cpp,v 1.19 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include "commands.h") s
32.4 658 M (4:) s
52.2 658 M
(#include "debug.h") s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(command_hash cmd_hash {) s
32.4 622 M (7:) s
52.2 622 M
(   {"cat"   , fn_cat   },) s
32.4 610 M (8:) s
52.2 610 M
(   {"cd"    , fn_cd    },) s
32.4 598 M (9:) s
52.2 598 M
(   {"echo"  , fn_echo  },) s
25.8 586 M (10:) s
52.2 586 M
(   {"exit"  , fn_exit  },) s
25.8 574 M (11:) s
52.2 574 M
(   {"ls"    , fn_ls    },) s
25.8 562 M (12:) s
52.2 562 M
(   {"lsr"   , fn_lsr   },) s
25.8 550 M (13:) s
52.2 550 M
(   {"make"  , fn_make  },) s
25.8 538 M (14:) s
52.2 538 M
(   {"mkdir" , fn_mkdir },) s
25.8 526 M (15:) s
52.2 526 M
(   {"prompt", fn_prompt},) s
25.8 514 M (16:) s
52.2 514 M
(   {"pwd"   , fn_pwd   },) s
25.8 502 M (17:) s
52.2 502 M
(   {"rm"    , fn_rm    },) s
25.8 490 M (18:) s
52.2 490 M
(   {"rmr"   , fn_rmr   },) s
25.8 478 M (19:) s
52.2 478 M
(   {"#"     , fn_nothing},) s
25.8 466 M (20:) s
52.2 466 M
(};) s
25.8 454 M (21:) s
25.8 442 M (22:) s
52.2 442 M
(command_fn find_command_fn \(const string& cmd\) {) s
25.8 430 M (23:) s
52.2 430 M
(   // Note: value_type is pair<const key_type, mapped_type>) s
25.8 418 M (24:) s
52.2 418 M
(   // So: iterator->first is key_type \(string\)) s
25.8 406 M (25:) s
52.2 406 M
(   // So: iterator->second is mapped_type \(command_fn\)) s
25.8 394 M (26:) s
52.2 394 M
(   DEBUGF \('c', "[" << cmd << "]"\);) s
25.8 382 M (27:) s
52.2 382 M
(   const auto result = cmd_hash.find \(cmd\);) s
25.8 370 M (28:) s
52.2 370 M
(   if \(result == cmd_hash.end\(\)\) {) s
25.8 358 M (29:) s
52.2 358 M
(      throw command_error \(cmd + ": no such function"\);) s
25.8 346 M (30:) s
52.2 346 M
(   }) s
25.8 334 M (31:) s
52.2 334 M
(   return result->second;) s
25.8 322 M (32:) s
52.2 322 M
(}) s
25.8 310 M (33:) s
25.8 298 M (34:) s
52.2 298 M
(int exit_status_message\(\) {) s
25.8 286 M (35:) s
52.2 286 M
(   int status = exec::status\(\);) s
25.8 274 M (36:) s
52.2 274 M
(   cout << exec::execname\(\) << ": exit\(" << status << "\)" << endl;) s
25.8 262 M (37:) s
52.2 262 M
(   ) s
25.8 250 M (38:) s
52.2 250 M
(   return status;) s
25.8 238 M (39:) s
52.2 238 M
(}) s
25.8 226 M (40:) s
25.8 214 M (41:) s
52.2 214 M
(void fn_nothing\(inode_state& state, const wordvec& words\){) s
25.8 202 M (42:) s
52.2 202 M
(   DEBUGF \('c', state\);) s
25.8 190 M (43:) s
52.2 190 M
(   DEBUGF \('c', words\);) s
25.8 178 M (44:) s
52.2 178 M
(}) s
25.8 166 M (45:) s
25.8 154 M (46:) s
52.2 154 M
(void fn_cat \(inode_state& state, const wordvec& words\){) s
25.8 142 M (47:) s
52.2 142 M
(  if\(words.size\(\)==1\){) s
25.8 130 M (48:) s
52.2 130 M
(      err_print\("cat", " ", "Incorrect number of arguments"\);) s
25.8 118 M (49:) s
52.2 118 M
(      exec::status\(1\);) s
25.8 106 M (50:) s
52.2 106 M
(  }else{) s
25.8 94 M (51:) s
52.2 94 M
(    for\(size_t i=1;i<words.size\(\);i++\){) s
25.8 82 M (52:) s
52.2 82 M
(      try{) s
25.8 70 M (53:) s
52.2 70 M
(        state.cat\(words[i]\);) s
25.8 58 M (54:) s
52.2 58 M
(      }catch\(command_error& error\){) s
25.8 46 M (55:) s
52.2 46 M
(        exec::status\(1\);) s
25.8 34 M (56:) s
52.2 34 M
(      }) s
25.8 22 M (57:) s
52.2 22 M
(     }) s
25.8 10 M (58:) s
52.2 10 M
(   }) s
_R
S
%%Page: (2) 3
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (commands.cpp) def
/fdir (.) def
/ftail (commands.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (59:) s
52.2 694 M
(   DEBUGF \('c', state\);) s
25.8 682 M (60:) s
52.2 682 M
(   DEBUGF \('c', words\);) s
25.8 670 M (61:) s
52.2 670 M
(}) s
25.8 658 M (62:) s
25.8 646 M (63:) s
52.2 646 M
(void fn_cd \(inode_state& state, const wordvec& words\){) s
25.8 634 M (64:) s
52.2 634 M
(   if\(words.size\(\)==1\){) s
25.8 622 M (65:) s
52.2 622 M
(      state.cd \("/"\);) s
25.8 610 M (66:) s
52.2 610 M
(   }) s
25.8 598 M (67:) s
52.2 598 M
(   else if\(words.size\(\)>2\){) s
25.8 586 M (68:) s
52.2 586 M
(       err_print\("cd", words[1], "Incorrect number of arguments"\);) s
25.8 574 M (69:) s
52.2 574 M
(       exec::status\(1\);) s
25.8 562 M (70:) s
52.2 562 M
(   }else if \(state.cd \(words[1]\)\){) s
25.8 550 M (71:) s
52.2 550 M
(       exec::status\(1\);) s
25.8 538 M (72:) s
52.2 538 M
(   }) s
25.8 526 M (73:) s
52.2 526 M
(   DEBUGF \('c', state\);) s
25.8 514 M (74:) s
52.2 514 M
(   DEBUGF \('c', words\);) s
25.8 502 M (75:) s
52.2 502 M
(}) s
25.8 490 M (76:) s
25.8 478 M (77:) s
52.2 478 M
(void fn_echo \(inode_state& state, const wordvec& words\){) s
25.8 466 M (78:) s
52.2 466 M
(   DEBUGF \('c', state\);) s
25.8 454 M (79:) s
52.2 454 M
(   DEBUGF \('c', words\);) s
25.8 442 M (80:) s
52.2 442 M
(   cout << word_range \(words.cbegin\(\) + 1, words.cend\(\)\) << endl;) s
25.8 430 M (81:) s
52.2 430 M
(}) s
25.8 418 M (82:) s
_R
S
%%Page: (3) 4
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (commands.cpp) def
/fdir (.) def
/ftail (commands.cpp) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (83:) s
25.8 682 M (84:) s
52.2 682 M
(void fn_exit \(inode_state& state, const wordvec& words\){) s
25.8 670 M (85:) s
52.2 670 M
(   DEBUGF \('c', state\);) s
25.8 658 M (86:) s
52.2 658 M
(   DEBUGF \('c', words\);) s
25.8 646 M (87:) s
52.2 646 M
(   if\(words.size\(\) > 1\)) s
25.8 634 M (88:) s
52.2 634 M
(    exec::status\(stoi\(words[1]\)\);) s
25.8 622 M (89:) s
52.2 622 M
(   throw ysh_exit\(\);) s
25.8 610 M (90:) s
52.2 610 M
(}) s
25.8 598 M (91:) s
25.8 586 M (92:) s
52.2 586 M
(void fn_ls \(inode_state& state, const wordvec& words\){) s
25.8 574 M (93:) s
52.2 574 M
(   if\(words.size\(\)==1\)) s
25.8 562 M (94:) s
52.2 562 M
(      state.lsprint\("."\);) s
25.8 550 M (95:) s
52.2 550 M
(   else) s
25.8 538 M (96:) s
52.2 538 M
(     for\(size_t i=1;i<words.size\(\);i++\)) s
25.8 526 M (97:) s
52.2 526 M
(        if\(state.lsprint\(words[i]\)\)) s
25.8 514 M (98:) s
52.2 514 M
(            exec::status\(1\);) s
25.8 502 M (99:) s
52.2 502 M
(   DEBUGF \('c', state\);) s
19.2 490 M (100:) s
52.2 490 M
(   DEBUGF \('c', words\);) s
19.2 478 M (101:) s
52.2 478 M
(}) s
19.2 466 M (102:) s
19.2 454 M (103:) s
52.2 454 M
(void fn_lsr \(inode_state& state, const wordvec& words\){) s
19.2 442 M (104:) s
52.2 442 M
(   if\(words.size\(\)==1\)) s
19.2 430 M (105:) s
52.2 430 M
(      state.lsr\(""\);) s
19.2 418 M (106:) s
52.2 418 M
(   else) s
19.2 406 M (107:) s
52.2 406 M
(     for\(size_t i=1;i<words.size\(\);i++\)) s
19.2 394 M (108:) s
52.2 394 M
(        state.lsr\(words[i]\);) s
19.2 382 M (109:) s
19.2 370 M (110:) s
52.2 370 M
(   DEBUGF \('c', state\);) s
19.2 358 M (111:) s
52.2 358 M
(   DEBUGF \('c', words\);) s
19.2 346 M (112:) s
52.2 346 M
(}) s
19.2 334 M (113:) s
19.2 322 M (114:) s
52.2 322 M
(void fn_make \(inode_state& state, const wordvec& words\){) s
19.2 310 M (115:) s
52.2 310 M
(   if\(words.size\(\)<2\){) s
19.2 298 M (116:) s
52.2 298 M
(       err_print\("make", " ", "Incorrect number of arguments"\);) s
19.2 286 M (117:) s
52.2 286 M
(       exec::status\(1\);) s
19.2 274 M (118:) s
52.2 274 M
(   }else{) s
19.2 262 M (119:) s
52.2 262 M
(       string text= \(""\);) s
19.2 250 M (120:) s
52.2 250 M
(       for\(size_t i=2;i<words.size\(\);i++\){) s
19.2 238 M (121:) s
52.2 238 M
(         text.append\(words[i]\);) s
19.2 226 M (122:) s
52.2 226 M
(         if\(i!=words.size\(\)-1\)) s
19.2 214 M (123:) s
52.2 214 M
(             text.append\(" "\);) s
19.2 202 M (124:) s
19.2 190 M (125:) s
52.2 190 M
(     }) s
19.2 178 M (126:) s
19.2 166 M (127:) s
52.2 166 M
(     if\(state.make_file\(words[1],text\)\){) s
19.2 154 M (128:) s
52.2 154 M
(       exec::status\(1\);) s
19.2 142 M (129:) s
19.2 130 M (130:) s
52.2 130 M
(     }) s
19.2 118 M (131:) s
52.2 118 M
(   }) s
19.2 106 M (132:) s
52.2 106 M
(   DEBUGF \('c', state\);) s
19.2 94 M (133:) s
52.2 94 M
(   DEBUGF \('c', words\);) s
19.2 82 M (134:) s
52.2 82 M
(}) s
19.2 70 M (135:) s
19.2 58 M (136:) s
52.2 58 M
(void fn_mkdir \(inode_state& state, const wordvec& words\){) s
19.2 46 M (137:) s
52.2 46 M
(   if\( words.size\(\) != 2\){) s
19.2 34 M (138:) s
52.2 34 M
(     if\(words.size\(\)==1\)) s
19.2 22 M (139:) s
52.2 22 M
(       err_print\("mkdir", " ", "Incorrect number of arguments"\);) s
19.2 10 M (140:) s
52.2 10 M
(     else) s
_R
S
%%Page: (4) 5
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (commands.cpp) def
/fdir (.) def
/ftail (commands.cpp) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (141:) s
52.2 694 M
(       err_print\("mkdir", words[1], "Incorrect number of arguments"\);) s
19.2 682 M (142:) s
52.2 682 M
(      exec::status\(1\);) s
19.2 670 M (143:) s
52.2 670 M
(   }else if \(state.mkdir_at_cwd\(words[1]\)\){) s
19.2 658 M (144:) s
52.2 658 M
(      exec::status\(1\);) s
19.2 646 M (145:) s
52.2 646 M
(   }) s
19.2 634 M (146:) s
52.2 634 M
(   DEBUGF \('c', state\);) s
19.2 622 M (147:) s
52.2 622 M
(   DEBUGF \('c', words\);) s
19.2 610 M (148:) s
52.2 610 M
(}) s
19.2 598 M (149:) s
19.2 586 M (150:) s
52.2 586 M
(void fn_prompt \(inode_state& state, const wordvec& words\){) s
19.2 574 M (151:) s
52.2 574 M
(   string text= \(""\);) s
19.2 562 M (152:) s
52.2 562 M
(   for\(size_t i=1;i<words.size\(\);i++\){) s
19.2 550 M (153:) s
52.2 550 M
(      text.append\(words[i]\);) s
19.2 538 M (154:) s
52.2 538 M
(      if\(i!=words.size\(\)-1\)) s
19.2 526 M (155:) s
52.2 526 M
(         text.append\(" "\);) s
19.2 514 M (156:) s
52.2 514 M
(   }) s
19.2 502 M (157:) s
52.2 502 M
(   state.setprompt\(text+" "\);) s
19.2 490 M (158:) s
52.2 490 M
(   DEBUGF \('c', state\);) s
19.2 478 M (159:) s
52.2 478 M
(   DEBUGF \('c', words\);) s
19.2 466 M (160:) s
52.2 466 M
(}) s
19.2 454 M (161:) s
19.2 442 M (162:) s
52.2 442 M
(void fn_pwd \(inode_state& state, const wordvec& words\){) s
19.2 430 M (163:) s
52.2 430 M
(   if\(words.size\(\)>1\){) s
19.2 418 M (164:) s
52.2 418 M
(     exec::status\(1\);) s
19.2 406 M (165:) s
52.2 406 M
(     err_print\("pwd", words[1], "Incorrect number of arguments"\);) s
19.2 394 M (166:) s
52.2 394 M
(   }else if\(state.pwd\(\)\){) s
19.2 382 M (167:) s
52.2 382 M
(     exec::status\(1\);) s
19.2 370 M (168:) s
52.2 370 M
(   }) s
19.2 358 M (169:) s
52.2 358 M
(   DEBUGF \('c', state\);) s
19.2 346 M (170:) s
52.2 346 M
(   DEBUGF \('c', words\);) s
19.2 334 M (171:) s
52.2 334 M
(}) s
19.2 322 M (172:) s
19.2 310 M (173:) s
52.2 310 M
(void fn_rm \(inode_state& state, const wordvec& words\){) s
19.2 298 M (174:) s
52.2 298 M
(   if\(words.size\(\)!=2\){) s
19.2 286 M (175:) s
52.2 286 M
(      cerr << "Function rm called with invalid number of args";) s
19.2 274 M (176:) s
52.2 274 M
(      return;) s
19.2 262 M (177:) s
52.2 262 M
(   }) s
19.2 250 M (178:) s
52.2 250 M
(   state.rm\(words[1]\);) s
19.2 238 M (179:) s
52.2 238 M
(   DEBUGF \('c', state\);) s
19.2 226 M (180:) s
52.2 226 M
(   DEBUGF \('c', words\);) s
19.2 214 M (181:) s
52.2 214 M
(}) s
19.2 202 M (182:) s
19.2 190 M (183:) s
52.2 190 M
(void fn_rmr \(inode_state& state, const wordvec& words\){) s
19.2 178 M (184:) s
52.2 178 M
(  if\(words.size\(\)!=2\){) s
19.2 166 M (185:) s
52.2 166 M
(      cerr << "Function rmr called with invalid number of args";) s
19.2 154 M (186:) s
52.2 154 M
(      return;) s
19.2 142 M (187:) s
52.2 142 M
(   }) s
19.2 130 M (188:) s
52.2 130 M
(   state.rmr\(words[1]\);) s
19.2 118 M (189:) s
52.2 118 M
(   DEBUGF \('c', state\);) s
19.2 106 M (190:) s
52.2 106 M
(   DEBUGF \('c', words\);) s
19.2 94 M (191:) s
52.2 94 M
(}) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (debug.h) def
/fdir (.) def
/ftail (debug.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: debug.h,v 1.11 2019-10-08 13:46:59-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#ifndef __DEBUG_H__) s
32.4 658 M (4:) s
52.2 658 M
(#define __DEBUG_H__) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(#include <bitset>) s
32.4 622 M (7:) s
52.2 622 M
(#include <climits>) s
32.4 610 M (8:) s
52.2 610 M
(#include <string>) s
32.4 598 M (9:) s
52.2 598 M
(using namespace std;) s
25.8 586 M (10:) s
25.8 574 M (11:) s
52.2 574 M
(// debug -) s
25.8 562 M (12:) s
52.2 562 M
(//    static class for maintaining global debug flags.) s
25.8 550 M (13:) s
52.2 550 M
(// setflags -) s
25.8 538 M (14:) s
52.2 538 M
(//    Takes a string argument, and sets a flag for each char in the) s
25.8 526 M (15:) s
52.2 526 M
(//    string.  As a special case, '@', sets all flags.) s
25.8 514 M (16:) s
52.2 514 M
(// getflag -) s
25.8 502 M (17:) s
52.2 502 M
(//    Used by the DEBUGF macro to check to see if a flag has been set.) s
25.8 490 M (18:) s
52.2 490 M
(//    Not to be called by user code.) s
25.8 478 M (19:) s
25.8 466 M (20:) s
52.2 466 M
(class debugflags {) s
25.8 454 M (21:) s
52.2 454 M
(   private:) s
25.8 442 M (22:) s
52.2 442 M
(      using flagset = bitset<UCHAR_MAX + 1>;) s
25.8 430 M (23:) s
52.2 430 M
(      static flagset flags;) s
25.8 418 M (24:) s
52.2 418 M
(   public:) s
25.8 406 M (25:) s
52.2 406 M
(      static void setflags \(const string& optflags\);) s
25.8 394 M (26:) s
52.2 394 M
(      static bool getflag \(char flag\);) s
25.8 382 M (27:) s
52.2 382 M
(      static void where \(char flag, const char* file, int line,) s
25.8 370 M (28:) s
52.2 370 M
(                         const char* pretty_function\);) s
25.8 358 M (29:) s
52.2 358 M
(};) s
25.8 346 M (30:) s
_R
S
%%Page: (2) 7
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (debug.h) def
/fdir (.) def
/ftail (debug.h) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (31:) s
25.8 682 M (32:) s
52.2 682 M
(// DEBUGF -) s
25.8 670 M (33:) s
52.2 670 M
(//    Macro which expands into trace code.  First argument is a) s
25.8 658 M (34:) s
52.2 658 M
(//    trace flag char, second argument is output code that can) s
25.8 646 M (35:) s
52.2 646 M
(//    be sandwiched between <<.  Beware of operator precedence.) s
25.8 634 M (36:) s
52.2 634 M
(//    Example:) s
25.8 622 M (37:) s
52.2 622 M
(//       DEBUGF \('u', "foo = " << foo\);) s
25.8 610 M (38:) s
52.2 610 M
(//    will print two words and a newline if flag 'u' is  on.) s
25.8 598 M (39:) s
52.2 598 M
(//    Traces are preceded by filename, line number, and function.) s
25.8 586 M (40:) s
25.8 574 M (41:) s
52.2 574 M
(#ifdef NDEBUG) s
25.8 562 M (42:) s
52.2 562 M
(#define DEBUGF\(FLAG,CODE\) ;) s
25.8 550 M (43:) s
52.2 550 M
(#define DEBUGS\(FLAG,STMT\) ;) s
25.8 538 M (44:) s
52.2 538 M
(#else) s
25.8 526 M (45:) s
52.2 526 M
(#define DEBUGF\(FLAG,CODE\) { \\) s
25.8 514 M (46:) s
52.2 514 M
(           if \(debugflags::getflag \(FLAG\)\) { \\) s
25.8 502 M (47:) s
52.2 502 M
(              debugflags::where \(FLAG, __FILE__, __LINE__, \\) s
25.8 490 M (48:) s
52.2 490 M
(                                 __PRETTY_FUNCTION__\); \\) s
25.8 478 M (49:) s
52.2 478 M
(              cerr << CODE << endl; \\) s
25.8 466 M (50:) s
52.2 466 M
(           } \\) s
25.8 454 M (51:) s
52.2 454 M
(        }) s
25.8 442 M (52:) s
52.2 442 M
(#define DEBUGS\(FLAG,STMT\) { \\) s
25.8 430 M (53:) s
52.2 430 M
(           if \(debugflags::getflag \(FLAG\)\) { \\) s
25.8 418 M (54:) s
52.2 418 M
(              debugflags::where \(FLAG, __FILE__, __LINE__, \\) s
25.8 406 M (55:) s
52.2 406 M
(                                 __PRETTY_FUNCTION__\); \\) s
25.8 394 M (56:) s
52.2 394 M
(              STMT; \\) s
25.8 382 M (57:) s
52.2 382 M
(           } \\) s
25.8 370 M (58:) s
52.2 370 M
(        }) s
25.8 358 M (59:) s
52.2 358 M
(#endif) s
25.8 346 M (60:) s
25.8 334 M (61:) s
52.2 334 M
(#endif) s
25.8 322 M (62:) s
_R
S
%%Page: (1) 8
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (debug.cpp) def
/fdir (.) def
/ftail (debug.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: debug.cpp,v 1.14 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <climits>) s
32.4 658 M (4:) s
52.2 658 M
(#include <iostream>) s
32.4 646 M (5:) s
52.2 646 M
(#include <vector>) s
32.4 634 M (6:) s
32.4 622 M (7:) s
52.2 622 M
(using namespace std;) s
32.4 610 M (8:) s
32.4 598 M (9:) s
52.2 598 M
(#include "debug.h") s
25.8 586 M (10:) s
52.2 586 M
(#include "util.h") s
25.8 574 M (11:) s
25.8 562 M (12:) s
52.2 562 M
(debugflags::flagset debugflags::flags {};) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(void debugflags::setflags \(const string& initflags\) {) s
25.8 526 M (15:) s
52.2 526 M
(   for \(const unsigned char flag: initflags\) {) s
25.8 514 M (16:) s
52.2 514 M
(      if \(flag == '@'\) flags.set\(\);) s
25.8 502 M (17:) s
52.2 502 M
(                  else flags.set \(flag, true\);) s
25.8 490 M (18:) s
52.2 490 M
(   }) s
25.8 478 M (19:) s
52.2 478 M
(}) s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(// getflag -) s
25.8 442 M (22:) s
52.2 442 M
(//    Check to see if a certain flag is on.) s
25.8 430 M (23:) s
25.8 418 M (24:) s
52.2 418 M
(bool debugflags::getflag \(char flag\) {) s
25.8 406 M (25:) s
52.2 406 M
(   // WARNING: Don't TRACE this function or the stack will blow up.) s
25.8 394 M (26:) s
52.2 394 M
(   return flags.test \(static_cast<unsigned char> \(flag\)\);) s
25.8 382 M (27:) s
52.2 382 M
(}) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(void debugflags::where \(char flag, const char* file, int line,) s
25.8 346 M (30:) s
52.2 346 M
(                        const char* pretty_function\) {) s
25.8 334 M (31:) s
52.2 334 M
(   cout << exec::execname\(\) << ": DEBUG\(" << flag << "\) ") s
25.8 322 M (32:) s
52.2 322 M
(        << file << "[" << line << "] " << pretty_function << endl;) s
25.8 310 M (33:) s
52.2 310 M
(}) s
25.8 298 M (34:) s
_R
S
%%Page: (1) 9
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: file_sys.h,v 1.11 2019-10-27 21:05:44-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#ifndef __INODE_H__) s
32.4 658 M (4:) s
52.2 658 M
(#define __INODE_H__) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(#include <exception>) s
32.4 622 M (7:) s
52.2 622 M
(#include <iostream>) s
32.4 610 M (8:) s
52.2 610 M
(#include <memory>) s
32.4 598 M (9:) s
52.2 598 M
(#include <map>) s
25.8 586 M (10:) s
52.2 586 M
(#include <vector>) s
25.8 574 M (11:) s
52.2 574 M
(using namespace std;) s
25.8 562 M (12:) s
52.2 562 M
(#include "util.h") s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(// inode_t -) s
25.8 526 M (15:) s
52.2 526 M
(//    An inode is either a directory or a plain file.) s
25.8 514 M (16:) s
25.8 502 M (17:) s
52.2 502 M
(enum class file_type {PLAIN_TYPE, DIRECTORY_TYPE};) s
25.8 490 M (18:) s
52.2 490 M
(class inode;) s
25.8 478 M (19:) s
52.2 478 M
(class base_file;) s
25.8 466 M (20:) s
52.2 466 M
(class plain_file;) s
25.8 454 M (21:) s
52.2 454 M
(class directory;) s
25.8 442 M (22:) s
52.2 442 M
(using inode_ptr = shared_ptr<inode>;) s
25.8 430 M (23:) s
52.2 430 M
(using base_file_ptr = shared_ptr<base_file>;) s
25.8 418 M (24:) s
52.2 418 M
(using directory_ptr = shared_ptr<directory>;) s
25.8 406 M (25:) s
52.2 406 M
(using file_ptr = shared_ptr<plain_file>;) s
25.8 394 M (26:) s
52.2 394 M
(ostream& operator<< \(ostream&, file_type\);) s
25.8 382 M (27:) s
25.8 370 M (28:) s
52.2 370 M
(void err_print\(const string& cmdname,) s
25.8 358 M (29:) s
52.2 358 M
(const string& argname, const string& errname\);) s
25.8 346 M (30:) s
_R
S
%%Page: (2) 10
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (31:) s
25.8 682 M (32:) s
52.2 682 M
(// inode_state -) s
25.8 670 M (33:) s
52.2 670 M
(//    A small convenient class to maintain the state of the simulated) s
25.8 658 M (34:) s
52.2 658 M
(//    process:  the root \(/\), the current directory \(.\), and the) s
25.8 646 M (35:) s
52.2 646 M
(//    prompt.) s
25.8 634 M (36:) s
25.8 622 M (37:) s
52.2 622 M
(class inode_state {) s
25.8 610 M (38:) s
52.2 610 M
(   friend class inode;) s
25.8 598 M (39:) s
52.2 598 M
(   friend class plain_file;) s
25.8 586 M (40:) s
52.2 586 M
(   friend class base_file;) s
25.8 574 M (41:) s
52.2 574 M
(   friend class directory;) s
25.8 562 M (42:) s
52.2 562 M
(   friend ostream& operator<< \(ostream& out, const inode_state&\);) s
25.8 550 M (43:) s
52.2 550 M
(   private:) s
25.8 538 M (44:) s
52.2 538 M
(      inode_ptr root {nullptr};) s
25.8 526 M (45:) s
52.2 526 M
(      inode_ptr cwd {nullptr};) s
25.8 514 M (46:) s
52.2 514 M
(      string prompt_ {"% "};) s
25.8 502 M (47:) s
52.2 502 M
(      void rmrecur\(inode_ptr target\);) s
25.8 490 M (48:) s
52.2 490 M
(      void lsrecur\(const string& path\);) s
25.8 478 M (49:) s
52.2 478 M
(   public:) s
25.8 466 M (50:) s
52.2 466 M
(      ~inode_state\(\);) s
25.8 454 M (51:) s
52.2 454 M
(      inode_state \(const inode_state&\) = delete; // copy ctor) s
25.8 442 M (52:) s
52.2 442 M
(      inode_state& operator= \(const inode_state&\) = delete; // op=) s
25.8 430 M (53:) s
52.2 430 M
(      inode_state\(\);) s
25.8 418 M (54:) s
52.2 418 M
(      void rmr\(const string& path\);) s
25.8 406 M (55:) s
52.2 406 M
(      void rm\(const string& path\);) s
25.8 394 M (56:) s
52.2 394 M
(      bool lsprint\(const string& path\);) s
25.8 382 M (57:) s
52.2 382 M
(      void lsr\(const string& path\);) s
25.8 370 M (58:) s
52.2 370 M
(      bool pwd\(\);) s
25.8 358 M (59:) s
52.2 358 M
(      bool mkdir_at_cwd\(const string& filename\);) s
25.8 346 M (60:) s
52.2 346 M
(      bool make_file\(const string& filename, const string& text\);) s
25.8 334 M (61:) s
52.2 334 M
(      bool cat\(const string& filename\);) s
25.8 322 M (62:) s
52.2 322 M
(      bool cd\(const string& path\);) s
25.8 310 M (63:) s
52.2 310 M
(      inode_ptr pathDecode\(const string& path\);) s
25.8 298 M (64:) s
52.2 298 M
(      const string& prompt\(\) const;) s
25.8 286 M (65:) s
52.2 286 M
(      void setprompt\(const string& newprompt\);) s
25.8 274 M (66:) s
52.2 274 M
(};) s
25.8 262 M (67:) s
25.8 250 M (68:) s
52.2 250 M
(// class inode -) s
25.8 238 M (69:) s
52.2 238 M
(// inode ctor -) s
25.8 226 M (70:) s
52.2 226 M
(//    Create a new inode of the given type.) s
25.8 214 M (71:) s
52.2 214 M
(// get_inode_nr -) s
25.8 202 M (72:) s
52.2 202 M
(//    Retrieves the serial number of the inode.  Inode numbers are) s
25.8 190 M (73:) s
52.2 190 M
(//    allocated in sequence by small integer.) s
25.8 178 M (74:) s
52.2 178 M
(// size -) s
25.8 166 M (75:) s
52.2 166 M
(//    Returns the size of an inode.  For a directory, this is the) s
25.8 154 M (76:) s
52.2 154 M
(//    number of dirents.  For a text file, the number of characters) s
25.8 142 M (77:) s
52.2 142 M
(//    when printed \(the sum of the lengths of each word, plus the) s
25.8 130 M (78:) s
52.2 130 M
(//    number of words.) s
25.8 118 M (79:) s
52.2 118 M
(//) s
25.8 106 M (80:) s
25.8 94 M (81:) s
52.2 94 M
(class inode {) s
25.8 82 M (82:) s
52.2 82 M
(   friend class inode_state;) s
25.8 70 M (83:) s
52.2 70 M
(   friend class plain_file;) s
25.8 58 M (84:) s
52.2 58 M
(   friend class base_file;) s
25.8 46 M (85:) s
52.2 46 M
(   friend class directory;) s
25.8 34 M (86:) s
52.2 34 M
(   private:) s
25.8 22 M (87:) s
52.2 22 M
(      static int next_inode_nr;) s
25.8 10 M (88:) s
52.2 10 M
(      int inode_nr;) s
_R
S
%%Page: (3) 11
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (89:) s
52.2 694 M
(      base_file_ptr contents;) s
25.8 682 M (90:) s
52.2 682 M
(      string fileType;) s
25.8 670 M (91:) s
52.2 670 M
(   public:) s
25.8 658 M (92:) s
52.2 658 M
(      inode \(file_type\);) s
25.8 646 M (93:) s
52.2 646 M
(      int get_inode_nr\(\) const;) s
25.8 634 M (94:) s
52.2 634 M
(      int size\(\) const;) s
25.8 622 M (95:) s
52.2 622 M
(      string type\(\) const;) s
25.8 610 M (96:) s
52.2 610 M
(};) s
25.8 598 M (97:) s
_R
S
%%Page: (4) 12
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (98:) s
25.8 682 M (99:) s
52.2 682 M
(// class base_file -) s
19.2 670 M (100:) s
52.2 670 M
(// Just a base class at which an inode can point.  No data or) s
19.2 658 M (101:) s
52.2 658 M
(// functions.  Makes the synthesized members useable only from) s
19.2 646 M (102:) s
52.2 646 M
(// the derived classes.) s
19.2 634 M (103:) s
19.2 622 M (104:) s
52.2 622 M
(class base_file {) s
19.2 610 M (105:) s
52.2 610 M
(   friend class inode_state;) s
19.2 598 M (106:) s
52.2 598 M
(   friend class inode;) s
19.2 586 M (107:) s
52.2 586 M
(   friend class plain_file;) s
19.2 574 M (108:) s
52.2 574 M
(   friend class directory;) s
19.2 562 M (109:) s
52.2 562 M
(   protected:) s
19.2 550 M (110:) s
52.2 550 M
(      base_file\(\) = default;) s
19.2 538 M (111:) s
52.2 538 M
(      virtual const string error_file_type\(\) const = 0;) s
19.2 526 M (112:) s
52.2 526 M
(   public:) s
19.2 514 M (113:) s
52.2 514 M
(      virtual ~base_file\(\) = default;) s
19.2 502 M (114:) s
52.2 502 M
(      base_file \(const base_file&\) = delete;) s
19.2 490 M (115:) s
52.2 490 M
(      base_file& operator= \(const base_file&\) = delete;) s
19.2 478 M (116:) s
52.2 478 M
(      virtual size_t size\(\) const = 0;) s
19.2 466 M (117:) s
52.2 466 M
(      virtual const string& readfile\(\) const;) s
19.2 454 M (118:) s
52.2 454 M
(      virtual void writefile \(const string& newdata\);) s
19.2 442 M (119:) s
52.2 442 M
(      virtual void remove \(const string& filename\);) s
19.2 430 M (120:) s
52.2 430 M
(      virtual inode_ptr mkdir \(const string& dirname\);) s
19.2 418 M (121:) s
52.2 418 M
(      virtual inode_ptr mkfile \(const string& filename\);) s
19.2 406 M (122:) s
52.2 406 M
(};) s
19.2 394 M (123:) s
19.2 382 M (124:) s
52.2 382 M
(class file_error: public runtime_error {) s
19.2 370 M (125:) s
52.2 370 M
(   public:) s
19.2 358 M (126:) s
52.2 358 M
(      explicit file_error \(const string& what\);) s
19.2 346 M (127:) s
52.2 346 M
(};) s
19.2 334 M (128:) s
_R
S
%%Page: (5) 13
%%BeginPageSetup
_S
38 24 translate
/pagenum 5 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (5) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (129:) s
19.2 682 M (130:) s
52.2 682 M
(// class plain_file -) s
19.2 670 M (131:) s
52.2 670 M
(// Used to hold data.) s
19.2 658 M (132:) s
52.2 658 M
(// synthesized default ctor -) s
19.2 646 M (133:) s
52.2 646 M
(//    Default vector<string> is a an empty vector.) s
19.2 634 M (134:) s
52.2 634 M
(// readfile -) s
19.2 622 M (135:) s
52.2 622 M
(//    Returns a copy of the contents of the wordvec in the file.) s
19.2 610 M (136:) s
52.2 610 M
(// writefile -) s
19.2 598 M (137:) s
52.2 598 M
(//    Replaces the contents of a file with new contents.) s
19.2 586 M (138:) s
19.2 574 M (139:) s
52.2 574 M
(class plain_file: public base_file {) s
19.2 562 M (140:) s
52.2 562 M
(   friend class inode_state;) s
19.2 550 M (141:) s
52.2 550 M
(   friend class inode;) s
19.2 538 M (142:) s
52.2 538 M
(   friend class base_file;) s
19.2 526 M (143:) s
52.2 526 M
(   friend class directory;) s
19.2 514 M (144:) s
52.2 514 M
(   private:) s
19.2 502 M (145:) s
52.2 502 M
(      string data;) s
19.2 490 M (146:) s
52.2 490 M
(      virtual const string error_file_type\(\) const override {) s
19.2 478 M (147:) s
52.2 478 M
(         return "plain file";) s
19.2 466 M (148:) s
52.2 466 M
(      }) s
19.2 454 M (149:) s
52.2 454 M
(   public:) s
19.2 442 M (150:) s
52.2 442 M
(      virtual size_t size\(\) const override;) s
19.2 430 M (151:) s
52.2 430 M
(      virtual const string& readfile\(\) const override;) s
19.2 418 M (152:) s
52.2 418 M
(      virtual void writefile \(const string& newdata\) override;) s
19.2 406 M (153:) s
52.2 406 M
(};) s
19.2 394 M (154:) s
19.2 382 M (155:) s
52.2 382 M
(// class directory -) s
19.2 370 M (156:) s
52.2 370 M
(// Used to map filenames onto inode pointers.) s
19.2 358 M (157:) s
52.2 358 M
(// default ctor -) s
19.2 346 M (158:) s
52.2 346 M
(//    Creates a new map with keys "." and "..".) s
19.2 334 M (159:) s
52.2 334 M
(// remove -) s
19.2 322 M (160:) s
52.2 322 M
(//    Removes the file or subdirectory from the current inode.) s
19.2 310 M (161:) s
52.2 310 M
(//    Throws an file_error if this is not a directory, the file) s
19.2 298 M (162:) s
52.2 298 M
(//    does not exist, or the subdirectory is not empty.) s
19.2 286 M (163:) s
52.2 286 M
(//    Here empty means the only entries are dot \(.\) and dotdot \(..\).) s
19.2 274 M (164:) s
52.2 274 M
(// mkdir -) s
19.2 262 M (165:) s
52.2 262 M
(//    Creates a new directory under the current directory and) s
19.2 250 M (166:) s
52.2 250 M
(//    immediately adds the directories dot \(.\) and dotdot \(..\) to it.) s
19.2 238 M (167:) s
52.2 238 M
(//    Note that the parent \(..\) of / is / itself.  It is an error) s
19.2 226 M (168:) s
52.2 226 M
(//    if the entry already exists.) s
19.2 214 M (169:) s
52.2 214 M
(// mkfile -) s
19.2 202 M (170:) s
52.2 202 M
(//    Create a new empty text file with the given name.  Error if) s
19.2 190 M (171:) s
52.2 190 M
(//    a dirent with that name exists.) s
19.2 178 M (172:) s
19.2 166 M (173:) s
52.2 166 M
(class directory: public base_file {) s
19.2 154 M (174:) s
52.2 154 M
(   friend class inode_state;) s
19.2 142 M (175:) s
52.2 142 M
(   friend class inode;) s
19.2 130 M (176:) s
52.2 130 M
(   friend class plain_file;) s
19.2 118 M (177:) s
52.2 118 M
(   friend class base_file;) s
19.2 106 M (178:) s
52.2 106 M
(   private:) s
19.2 94 M (179:) s
52.2 94 M
(      // Must be a map, not unordered_map, so printing is lexicographic) s
19.2 82 M (180:) s
52.2 82 M
(      map<string,inode_ptr> dirents;) s
19.2 70 M (181:) s
52.2 70 M
(      virtual const string error_file_type\(\) const override {) s
19.2 58 M (182:) s
52.2 58 M
(         return "directory";) s
19.2 46 M (183:) s
52.2 46 M
(      }) s
19.2 34 M (184:) s
52.2 34 M
(   public:) s
19.2 22 M (185:) s
52.2 22 M
(      virtual size_t size\(\) const override;) s
19.2 10 M (186:) s
52.2 10 M
(      virtual void remove \(const string& filename\) override;) s
_R
S
%%Page: (6) 14
%%BeginPageSetup
_S
38 24 translate
/pagenum 6 def
/fname (file_sys.h) def
/fdir (.) def
/ftail (file_sys.h) def
% User defined strings:
/pagenumstr (6) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (187:) s
52.2 694 M
(      virtual inode_ptr mkdir \(const string& dirname\) override;) s
19.2 682 M (188:) s
52.2 682 M
(      virtual inode_ptr mkfile \(const string& filename\) override;) s
19.2 670 M (189:) s
52.2 670 M
(};) s
19.2 658 M (190:) s
19.2 646 M (191:) s
52.2 646 M
(#endif) s
_R
S
%%Page: (1) 15
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: file_sys.cpp,v 1.8 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <iostream>) s
32.4 658 M (4:) s
52.2 658 M
(#include <stdexcept>) s
32.4 646 M (5:) s
52.2 646 M
(#include <unordered_map>) s
32.4 634 M (6:) s
32.4 622 M (7:) s
52.2 622 M
(using namespace std;) s
32.4 610 M (8:) s
32.4 598 M (9:) s
52.2 598 M
(#include "debug.h") s
25.8 586 M (10:) s
52.2 586 M
(#include "file_sys.h") s
25.8 574 M (11:) s
52.2 574 M
(#include <cstring>) s
25.8 562 M (12:) s
52.2 562 M
(int inode::next_inode_nr {1};) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(struct file_type_hash {) s
25.8 526 M (15:) s
52.2 526 M
(   size_t operator\(\) \(file_type type\) const {) s
25.8 514 M (16:) s
52.2 514 M
(      return static_cast<size_t> \(type\);) s
25.8 502 M (17:) s
52.2 502 M
(   }) s
25.8 490 M (18:) s
52.2 490 M
(};) s
25.8 478 M (19:) s
25.8 466 M (20:) s
52.2 466 M
(void err_print\(const string& cmdname,) s
25.8 454 M (21:) s
52.2 454 M
(const string& argname, const string& errname\){) s
25.8 442 M (22:) s
52.2 442 M
(  throw command_error \(cmdname + ": " + argname + ": " + errname\);) s
25.8 430 M (23:) s
52.2 430 M
(  // cerr << cmdname << ": " << argname << ": " << errname << endl;) s
25.8 418 M (24:) s
52.2 418 M
(}) s
25.8 406 M (25:) s
25.8 394 M (26:) s
52.2 394 M
(void inode_state::setprompt\(const string& newprompt\){) s
25.8 382 M (27:) s
52.2 382 M
(  prompt_ =newprompt;) s
25.8 370 M (28:) s
52.2 370 M
(}) s
25.8 358 M (29:) s
25.8 346 M (30:) s
52.2 346 M
(ostream& operator<< \(ostream& out, file_type type\) {) s
25.8 334 M (31:) s
52.2 334 M
(   static unordered_map<file_type,string,file_type_hash> hash {) s
25.8 322 M (32:) s
52.2 322 M
(      {file_type::PLAIN_TYPE, "PLAIN_TYPE"},) s
25.8 310 M (33:) s
52.2 310 M
(      {file_type::DIRECTORY_TYPE, "DIRECTORY_TYPE"},) s
25.8 298 M (34:) s
52.2 298 M
(   };) s
25.8 286 M (35:) s
52.2 286 M
(   return out << hash[type];) s
25.8 274 M (36:) s
52.2 274 M
(}) s
25.8 262 M (37:) s
25.8 250 M (38:) s
52.2 250 M
(inode_state::inode_state\(\) {) s
25.8 238 M (39:) s
52.2 238 M
(   root= make_shared<inode>\(file_type::DIRECTORY_TYPE\);) s
25.8 226 M (40:) s
52.2 226 M
(   directory_ptr dir = dynamic_pointer_cast<directory>\(root->contents\);) s
25.8 214 M (41:) s
52.2 214 M
(   dir -> dirents.insert\(pair<string,inode_ptr>\(".",root\)\);) s
25.8 202 M (42:) s
52.2 202 M
(   dir -> dirents.insert\(pair<string,inode_ptr>\("..",root\)\);) s
25.8 190 M (43:) s
52.2 190 M
(   cwd=root;) s
25.8 178 M (44:) s
25.8 166 M (45:) s
52.2 166 M
(   DEBUGF \('i', "root = " << root << ", cwd = " << cwd) s
25.8 154 M (46:) s
52.2 154 M
(          << ", prompt = \\"" << prompt\(\) << "\\""\);) s
25.8 142 M (47:) s
52.2 142 M
(}) s
25.8 130 M (48:) s
25.8 118 M (49:) s
52.2 118 M
(inode_state::~inode_state\(\) {) s
25.8 106 M (50:) s
52.2 106 M
(   rmrecur\(root\);) s
25.8 94 M (51:) s
52.2 94 M
(   root = nullptr;) s
25.8 82 M (52:) s
52.2 82 M
(   cwd = nullptr;) s
25.8 70 M (53:) s
52.2 70 M
(}) s
25.8 58 M (54:) s
25.8 46 M (55:) s
52.2 46 M
(bool inode_state::lsprint\(const string& path\){) s
25.8 34 M (56:) s
25.8 22 M (57:) s
52.2 22 M
(   inode_ptr temp = pathDecode\(path\);) s
25.8 10 M (58:) s
_R
S
%%Page: (2) 16
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (59:) s
52.2 694 M
(   directory_ptr dir= dynamic_pointer_cast<directory>\(temp->contents\);) s
25.8 682 M (60:) s
52.2 682 M
(   string a = \(""\);) s
25.8 670 M (61:) s
52.2 670 M
(   while\(dir->dirents.at\(".."\)!=temp\){) s
25.8 658 M (62:) s
52.2 658 M
(      inode_ptr temp2 =dir->dirents.at\(".."\);) s
25.8 646 M (63:) s
52.2 646 M
(      directory_ptr dir2 =) s
25.8 634 M (64:) s
52.2 634 M
(      dynamic_pointer_cast<directory>\(temp2->contents\);) s
25.8 622 M (65:) s
52.2 622 M
(      for \(auto it=dir2->dirents.begin\(\); it!=dir2->dirents.end\(\); ++it\)) s
25.8 610 M (66:) s
52.2 610 M
(        if\(it->second==temp\){) s
25.8 598 M (67:) s
52.2 598 M
(               a.insert\(0,it->first\);) s
25.8 586 M (68:) s
52.2 586 M
(               a.insert\(0,"/"\);) s
25.8 574 M (69:) s
52.2 574 M
(            }) s
25.8 562 M (70:) s
52.2 562 M
(          temp = dir->dirents.at\(".."\);) s
25.8 550 M (71:) s
52.2 550 M
(          dir= dynamic_pointer_cast<directory>\(temp->contents\);) s
25.8 538 M (72:) s
52.2 538 M
(   }) s
25.8 526 M (73:) s
52.2 526 M
(   if\(a.length\(\)>0\){) s
25.8 514 M (74:) s
52.2 514 M
(       cout <<a<<":"<<endl;) s
25.8 502 M (75:) s
52.2 502 M
(   }else{) s
25.8 490 M (76:) s
52.2 490 M
(       cout <<"/"<<":"<<endl;) s
25.8 478 M (77:) s
52.2 478 M
(   }) s
25.8 466 M (78:) s
52.2 466 M
(    inode_ptr result_path;) s
25.8 454 M (79:) s
52.2 454 M
(   if\(path.compare\("."\)==0||path.length\(\)==0\){) s
25.8 442 M (80:) s
52.2 442 M
(      result_path= cwd;) s
25.8 430 M (81:) s
52.2 430 M
(   }else{) s
25.8 418 M (82:) s
52.2 418 M
(      result_path= pathDecode\(path\);) s
25.8 406 M (83:) s
52.2 406 M
(   }) s
25.8 394 M (84:) s
52.2 394 M
(   if\(result_path ==nullptr\){) s
25.8 382 M (85:) s
52.2 382 M
(     err_print\("ls", path, "Path not found"\);) s
25.8 370 M (86:) s
52.2 370 M
(     return true;) s
25.8 358 M (87:) s
52.2 358 M
(   }) s
25.8 346 M (88:) s
52.2 346 M
(   // Printing everything in the directory) s
25.8 334 M (89:) s
52.2 334 M
(   directory_ptr dir3 =) s
25.8 322 M (90:) s
52.2 322 M
(   dynamic_pointer_cast<directory>\(result_path->contents\);) s
25.8 310 M (91:) s
52.2 310 M
(   for \(auto it=dir3->dirents.begin\(\); it!=dir3->dirents.end\(\); ++it\){) s
25.8 298 M (92:) s
25.8 286 M (93:) s
52.2 286 M
(       cout << "    "<< it -> second-> inode_nr ) s
25.8 274 M (94:) s
52.2 274 M
(       << "    " << it -> second->size\(\) << "  ";) s
25.8 262 M (95:) s
52.2 262 M
(       cout << it->first;) s
25.8 250 M (96:) s
52.2 250 M
(       if\(it -> second-> contents->error_file_type\(\)==) s
25.8 238 M (97:) s
52.2 238 M
(       "directory"&&\(it->first!="."&&it->first!=".." \)\){) s
25.8 226 M (98:) s
52.2 226 M
(         cout << "/";) s
25.8 214 M (99:) s
52.2 214 M
(       }) s
19.2 202 M (100:) s
52.2 202 M
(       cout << '\\n';) s
19.2 190 M (101:) s
52.2 190 M
(    }) s
19.2 178 M (102:) s
52.2 178 M
(   return false;) s
19.2 166 M (103:) s
52.2 166 M
(}) s
19.2 154 M (104:) s
19.2 142 M (105:) s
52.2 142 M
(void inode_state::lsr\(const string& path\){) s
19.2 130 M (106:) s
52.2 130 M
(    inode_ptr temp;) s
19.2 118 M (107:) s
52.2 118 M
(    if\(path.find\('/'\) == string::npos\)) s
19.2 106 M (108:) s
52.2 106 M
(        temp = cwd;) s
19.2 94 M (109:) s
52.2 94 M
(    else) s
19.2 82 M (110:) s
52.2 82 M
(        temp = pathDecode\(path\);) s
19.2 70 M (111:) s
52.2 70 M
(    // Building absolute path to the target directory) s
19.2 58 M (112:) s
52.2 58 M
(   directory_ptr dir = dynamic_pointer_cast<directory>\(temp->contents\);) s
19.2 46 M (113:) s
52.2 46 M
(   string absPath = \(""\);) s
19.2 34 M (114:) s
52.2 34 M
(   while\(dir->dirents.at\(".."\) != temp\){) s
19.2 22 M (115:) s
52.2 22 M
(      inode_ptr temp2 = dir->dirents.at\(".."\);) s
19.2 10 M (116:) s
52.2 10 M
(      directory_ptr dir2 =) s
_R
S
%%Page: (3) 17
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (117:) s
52.2 694 M
(      dynamic_pointer_cast<directory>\(temp2->contents\);) s
19.2 682 M (118:) s
52.2 682 M
(      for \(auto it = dir2->dirents.begin\(\);) s
19.2 670 M (119:) s
52.2 670 M
(      it != dir2->dirents.end\(\); ++it\)) s
19.2 658 M (120:) s
52.2 658 M
(        if\(it->second == temp\){) s
19.2 646 M (121:) s
52.2 646 M
(               absPath.insert\(0,it->first\);) s
19.2 634 M (122:) s
52.2 634 M
(               absPath.insert\(0,"/"\);) s
19.2 622 M (123:) s
52.2 622 M
(            }) s
19.2 610 M (124:) s
52.2 610 M
(          temp = dir->dirents.at\(".."\);) s
19.2 598 M (125:) s
52.2 598 M
(          dir = dynamic_pointer_cast<directory>\(temp->contents\);) s
19.2 586 M (126:) s
52.2 586 M
(   }) s
19.2 574 M (127:) s
52.2 574 M
(   if\(absPath.empty\(\)\)) s
19.2 562 M (128:) s
52.2 562 M
(      absPath = "/" + path;) s
19.2 550 M (129:) s
52.2 550 M
(   lsrecur\(absPath\);) s
19.2 538 M (130:) s
52.2 538 M
(}) s
19.2 526 M (131:) s
19.2 514 M (132:) s
52.2 514 M
(void inode_state::lsrecur\(const string& path\){) s
19.2 502 M (133:) s
52.2 502 M
(    lsprint\(path\);) s
19.2 490 M (134:) s
52.2 490 M
(    inode_ptr target = pathDecode\(path\);) s
19.2 478 M (135:) s
52.2 478 M
(    if\(\(*target\).size\(\) <= 2\){) s
19.2 466 M (136:) s
52.2 466 M
(        return;) s
19.2 454 M (137:) s
52.2 454 M
(    }) s
19.2 442 M (138:) s
52.2 442 M
(    directory_ptr dir =) s
19.2 430 M (139:) s
52.2 430 M
(    dynamic_pointer_cast<directory>\(target->contents\);) s
19.2 418 M (140:) s
52.2 418 M
(    auto it = dir->dirents.begin\(\);) s
19.2 406 M (141:) s
52.2 406 M
(    ++it;) s
19.2 394 M (142:) s
52.2 394 M
(    ++it;) s
19.2 382 M (143:) s
52.2 382 M
(    for \(; it != dir->dirents.end\(\); it++\)) s
19.2 370 M (144:) s
52.2 370 M
(        // Grab the value from the iterator \(inode_ptr\) and recur) s
19.2 358 M (145:) s
52.2 358 M
(        if\(\(*\(it->second\)\).type\(\) == "directory"\)) s
19.2 346 M (146:) s
52.2 346 M
(            lsrecur\(path + "/" + it->first\);) s
19.2 334 M (147:) s
52.2 334 M
(}) s
19.2 322 M (148:) s
19.2 310 M (149:) s
52.2 310 M
(void inode_state::rm\(const string& path\){) s
19.2 298 M (150:) s
52.2 298 M
(  // Get necessary pointers) s
19.2 286 M (151:) s
52.2 286 M
(  inode_ptr parent = cwd;) s
19.2 274 M (152:) s
52.2 274 M
(  string filename = path;) s
19.2 262 M (153:) s
52.2 262 M
(   if\(path.find\('/'\) != string::npos\){) s
19.2 250 M (154:) s
52.2 250 M
(      size_t index_of_last = filename.find_last_of\("/"\);) s
19.2 238 M (155:) s
52.2 238 M
(      filename = path.substr\(index_of_last + 1\);) s
19.2 226 M (156:) s
52.2 226 M
(      parent = pathDecode\(filename.substr\(0,index_of_last\)\);) s
19.2 214 M (157:) s
52.2 214 M
(   }) s
19.2 202 M (158:) s
52.2 202 M
(   inode_ptr target = pathDecode\(path\);) s
19.2 190 M (159:) s
52.2 190 M
(   // Error checking) s
19.2 178 M (160:) s
52.2 178 M
(   if\(target == nullptr\){) s
19.2 166 M (161:) s
52.2 166 M
(    err_print\("rm", path, "Target not found"\);) s
19.2 154 M (162:) s
52.2 154 M
(    return;) s
19.2 142 M (163:) s
52.2 142 M
(   }) s
19.2 130 M (164:) s
52.2 130 M
(   else if\(target == parent\){) s
19.2 118 M (165:) s
52.2 118 M
(    err_print\("rm", path, "Called on root"\);) s
19.2 106 M (166:) s
52.2 106 M
(    return;) s
19.2 94 M (167:) s
52.2 94 M
(   }) s
19.2 82 M (168:) s
52.2 82 M
(   else if\(\(*target\).type\(\) == "directory" && \(*target\).size\(\) > 2\){) s
19.2 70 M (169:) s
52.2 70 M
(    err_print\("rm", path, "Called on directory with children"\);) s
19.2 58 M (170:) s
52.2 58 M
(    return;) s
19.2 46 M (171:) s
52.2 46 M
(   }) s
19.2 34 M (172:) s
52.2 34 M
(   // Erase the reference) s
19.2 22 M (173:) s
52.2 22 M
(  directory_ptr dir = dynamic_pointer_cast<directory>\(parent->contents\);) s
19.2 10 M (174:) s
52.2 10 M
(  dir->dirents.erase\(filename\);) s
_R
S
%%Page: (4) 18
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (175:) s
52.2 694 M
(}) s
19.2 682 M (176:) s
19.2 670 M (177:) s
52.2 670 M
(void inode_state::rmr\(const string& path\){) s
19.2 658 M (178:) s
52.2 658 M
(    // Get necessary pointers) s
19.2 646 M (179:) s
52.2 646 M
(  inode_ptr parent = cwd;) s
19.2 634 M (180:) s
52.2 634 M
(  string filename = path;) s
19.2 622 M (181:) s
52.2 622 M
(   if\(path.find\('/'\) != string::npos\){) s
19.2 610 M (182:) s
52.2 610 M
(      size_t index_of_last = filename.find_last_of\("/"\);) s
19.2 598 M (183:) s
52.2 598 M
(      filename = path.substr\(index_of_last + 1\);) s
19.2 586 M (184:) s
52.2 586 M
(      parent = pathDecode\(filename.substr\(0,index_of_last\)\);) s
19.2 574 M (185:) s
52.2 574 M
(   }) s
19.2 562 M (186:) s
52.2 562 M
(   inode_ptr target = pathDecode\(path\);) s
19.2 550 M (187:) s
52.2 550 M
(   // Error checking) s
19.2 538 M (188:) s
52.2 538 M
(   if\(target == nullptr\){) s
19.2 526 M (189:) s
52.2 526 M
(    err_print\("rm", path, "Target not found"\);) s
19.2 514 M (190:) s
52.2 514 M
(    return;) s
19.2 502 M (191:) s
52.2 502 M
(   }) s
19.2 490 M (192:) s
52.2 490 M
(   else if\(target == parent\){) s
19.2 478 M (193:) s
52.2 478 M
(    err_print\("rm", path, "Called on root"\);) s
19.2 466 M (194:) s
52.2 466 M
(    return;) s
19.2 454 M (195:) s
52.2 454 M
(   }) s
19.2 442 M (196:) s
52.2 442 M
(   rmrecur\(target\);) s
19.2 430 M (197:) s
52.2 430 M
(   // Erase the reference) s
19.2 418 M (198:) s
52.2 418 M
(   directory_ptr dir =) s
19.2 406 M (199:) s
52.2 406 M
(   dynamic_pointer_cast<directory>\(parent->contents\);) s
19.2 394 M (200:) s
52.2 394 M
(   dir->dirents.erase\(filename\);) s
19.2 382 M (201:) s
52.2 382 M
(}) s
19.2 370 M (202:) s
19.2 358 M (203:) s
52.2 358 M
(void inode_state::rmrecur\(inode_ptr target\){) s
19.2 346 M (204:) s
52.2 346 M
(  if\(\(*target\).type\(\) == "directory" && \(*target\).size\(\) > 2\){) s
19.2 334 M (205:) s
52.2 334 M
(    directory_ptr dir =) s
19.2 322 M (206:) s
52.2 322 M
(    dynamic_pointer_cast<directory>\(target->contents\);) s
19.2 310 M (207:) s
52.2 310 M
(    auto next = dir->dirents.begin\(\);) s
19.2 298 M (208:) s
52.2 298 M
(    ++next;) s
19.2 286 M (209:) s
52.2 286 M
(    ++next;) s
19.2 274 M (210:) s
52.2 274 M
(    auto current = next;) s
19.2 262 M (211:) s
52.2 262 M
(    while\(next != dir->dirents.end\(\)\){) s
19.2 250 M (212:) s
52.2 250 M
(      ++next;) s
19.2 238 M (213:) s
52.2 238 M
(      rmrecur\(current->second\);) s
19.2 226 M (214:) s
52.2 226 M
(      dir->dirents.erase\(current->first\);) s
19.2 214 M (215:) s
52.2 214 M
(      current = next;) s
19.2 202 M (216:) s
52.2 202 M
(    }) s
19.2 190 M (217:) s
52.2 190 M
(    dir->dirents.erase\(".."\);) s
19.2 178 M (218:) s
52.2 178 M
(    dir->dirents.erase\("."\);) s
19.2 166 M (219:) s
52.2 166 M
(  }) s
19.2 154 M (220:) s
52.2 154 M
(}) s
19.2 142 M (221:) s
19.2 130 M (222:) s
52.2 130 M
(bool inode_state::pwd\(\){) s
19.2 118 M (223:) s
52.2 118 M
(   inode_ptr temp = cwd;) s
19.2 106 M (224:) s
52.2 106 M
(   directory_ptr dir= dynamic_pointer_cast<directory>\(temp->contents\);) s
19.2 94 M (225:) s
52.2 94 M
(   string a= \(""\);) s
19.2 82 M (226:) s
52.2 82 M
(   while\(dir->dirents.at\(".."\)!=temp\){) s
19.2 70 M (227:) s
52.2 70 M
(      inode_ptr temp2 =dir->dirents.at\(".."\);) s
19.2 58 M (228:) s
52.2 58 M
(      directory_ptr dir2 =) s
19.2 46 M (229:) s
52.2 46 M
(      dynamic_pointer_cast<directory>\(temp2->contents\);) s
19.2 34 M (230:) s
52.2 34 M
(      for \(auto it=dir2->dirents.begin\(\); it!=dir2->dirents.end\(\); ++it\)) s
19.2 22 M (231:) s
52.2 22 M
(        if\(it->second==temp\){) s
19.2 10 M (232:) s
52.2 10 M
(               a.insert\(0,it->first\);) s
_R
S
%%Page: (5) 19
%%BeginPageSetup
_S
38 24 translate
/pagenum 5 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (5) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (233:) s
52.2 694 M
(               a.insert\(0,"/"\);) s
19.2 682 M (234:) s
52.2 682 M
(                 //cout <<it->first;) s
19.2 670 M (235:) s
52.2 670 M
(            }) s
19.2 658 M (236:) s
52.2 658 M
(          temp = dir->dirents.at\(".."\);) s
19.2 646 M (237:) s
52.2 646 M
(          dir= dynamic_pointer_cast<directory>\(temp->contents\);) s
19.2 634 M (238:) s
52.2 634 M
(   }) s
19.2 622 M (239:) s
52.2 622 M
(   if\(a.length\(\)>0\){) s
19.2 610 M (240:) s
52.2 610 M
(       cout <<a<<endl;) s
19.2 598 M (241:) s
52.2 598 M
(   }else{) s
19.2 586 M (242:) s
52.2 586 M
(       cout <<"/"<<endl;) s
19.2 574 M (243:) s
52.2 574 M
(   }) s
19.2 562 M (244:) s
52.2 562 M
(   return false;) s
19.2 550 M (245:) s
52.2 550 M
(}) s
19.2 538 M (246:) s
19.2 526 M (247:) s
52.2 526 M
(bool inode_state::make_file\(const string& filename, const string& text\){) s
19.2 514 M (248:) s
52.2 514 M
(   inode_ptr path= cwd;) s
19.2 502 M (249:) s
52.2 502 M
(   string file;) s
19.2 490 M (250:) s
52.2 490 M
(   if\(filename.find\("/"\) != string::npos\){) s
19.2 478 M (251:) s
52.2 478 M
(      size_t index_of_last = filename.find_last_of\("/"\);) s
19.2 466 M (252:) s
52.2 466 M
(      path = pathDecode\(filename.substr\(0,index_of_last\)\);) s
19.2 454 M (253:) s
52.2 454 M
(      file =filename.substr\(index_of_last+1\);) s
19.2 442 M (254:) s
52.2 442 M
(      if\(path ==nullptr\){) s
19.2 430 M (255:) s
52.2 430 M
(      err_print\("make", filename, "Path to file not found"\);) s
19.2 418 M (256:) s
52.2 418 M
(        return true;) s
19.2 406 M (257:) s
52.2 406 M
(      }) s
19.2 394 M (258:) s
19.2 382 M (259:) s
52.2 382 M
(   }else{) s
19.2 370 M (260:) s
52.2 370 M
(      file= filename;) s
19.2 358 M (261:) s
52.2 358 M
(   }) s
19.2 346 M (262:) s
52.2 346 M
(   directory_ptr dir = dynamic_pointer_cast<directory>\(path->contents\);) s
19.2 334 M (263:) s
52.2 334 M
(   if\(dir->mkfile\(file\)==nullptr\){) s
19.2 322 M (264:) s
52.2 322 M
(     err_print\("make",filename,  "Path to file already exists"\);) s
19.2 310 M (265:) s
52.2 310 M
(     return true;) s
19.2 298 M (266:) s
52.2 298 M
(   }) s
19.2 286 M (267:) s
52.2 286 M
(   file_ptr ptr_to_file =) s
19.2 274 M (268:) s
52.2 274 M
(   dynamic_pointer_cast<plain_file>\(dir->dirents.at\(file\)->contents\);) s
19.2 262 M (269:) s
19.2 250 M (270:) s
52.2 250 M
(   ptr_to_file->writefile\(text\);) s
19.2 238 M (271:) s
52.2 238 M
(   return false;) s
19.2 226 M (272:) s
19.2 214 M (273:) s
52.2 214 M
(}) s
19.2 202 M (274:) s
19.2 190 M (275:) s
52.2 190 M
(bool inode_state::mkdir_at_cwd\(const string& filename\){) s
19.2 178 M (276:) s
52.2 178 M
(   inode_ptr path = cwd;) s
19.2 166 M (277:) s
52.2 166 M
(   string file;) s
19.2 154 M (278:) s
52.2 154 M
(   if\(filename.find\('/'\) != string::npos\){) s
19.2 142 M (279:) s
52.2 142 M
(      size_t index_of_last = filename.find_last_of\("/"\);) s
19.2 130 M (280:) s
19.2 118 M (281:) s
52.2 118 M
(      path = pathDecode\(filename.substr\(0,index_of_last\)\);) s
19.2 106 M (282:) s
52.2 106 M
(      file =filename.substr\(index_of_last+1\);) s
19.2 94 M (283:) s
19.2 82 M (284:) s
52.2 82 M
(      if\(path ==nullptr\){) s
19.2 70 M (285:) s
52.2 70 M
(        err_print\("mkdir", filename, "Path to directory not found"\);) s
19.2 58 M (286:) s
52.2 58 M
(        return true;) s
19.2 46 M (287:) s
52.2 46 M
(      }) s
19.2 34 M (288:) s
52.2 34 M
(   }else{) s
19.2 22 M (289:) s
52.2 22 M
(      file= filename;) s
19.2 10 M (290:) s
52.2 10 M
(   }) s
_R
S
%%Page: (6) 20
%%BeginPageSetup
_S
38 24 translate
/pagenum 6 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (6) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (291:) s
52.2 694 M
(   directory_ptr dir= dynamic_pointer_cast<directory>\(path->contents\);) s
19.2 682 M (292:) s
52.2 682 M
(   if\(dir->mkdir\(file\)==nullptr\){) s
19.2 670 M (293:) s
52.2 670 M
(     err_print\("mkdir", filename, "File already exists"\);) s
19.2 658 M (294:) s
52.2 658 M
(     return true;) s
19.2 646 M (295:) s
52.2 646 M
(   }) s
19.2 634 M (296:) s
52.2 634 M
(   return false;) s
19.2 622 M (297:) s
52.2 622 M
(}) s
19.2 610 M (298:) s
19.2 598 M (299:) s
52.2 598 M
(bool inode_state::cat\(const string& filename\){) s
19.2 586 M (300:) s
52.2 586 M
(   inode_ptr path = pathDecode\(filename\);) s
19.2 574 M (301:) s
52.2 574 M
(   if\(path ==nullptr\){) s
19.2 562 M (302:) s
52.2 562 M
(     err_print\("cat",filename, "Path to file chosen not valid"\);) s
19.2 550 M (303:) s
52.2 550 M
(     return true;) s
19.2 538 M (304:) s
52.2 538 M
(   }) s
19.2 526 M (305:) s
52.2 526 M
(   if \(path -> contents->error_file_type\(\)=="plain file"\){) s
19.2 514 M (306:) s
52.2 514 M
(      file_ptr ptr_to_file =) s
19.2 502 M (307:) s
52.2 502 M
(      dynamic_pointer_cast<plain_file>\(path->contents\);) s
19.2 490 M (308:) s
52.2 490 M
(      cout << ptr_to_file-> readfile\(\)<<endl;) s
19.2 478 M (309:) s
52.2 478 M
(   }else{) s
19.2 466 M (310:) s
52.2 466 M
(    err_print\("cat", filename, "Target is a directory"\);) s
19.2 454 M (311:) s
52.2 454 M
(     return true;) s
19.2 442 M (312:) s
52.2 442 M
(   }) s
19.2 430 M (313:) s
52.2 430 M
(   return false;) s
19.2 418 M (314:) s
52.2 418 M
(}) s
19.2 406 M (315:) s
19.2 394 M (316:) s
52.2 394 M
(inode_ptr inode_state::pathDecode\(const string& path\){) s
19.2 382 M (317:) s
52.2 382 M
(  inode_ptr ret = cwd;) s
19.2 370 M (318:) s
19.2 358 M (319:) s
52.2 358 M
(  if\(path.at\(0\)==\('/'\)\)) s
19.2 346 M (320:) s
52.2 346 M
(    ret = root;) s
19.2 334 M (321:) s
19.2 322 M (322:) s
52.2 322 M
(    //absolutePath) s
19.2 310 M (323:) s
52.2 310 M
(  wordvec words = split \(path, "/"\);) s
19.2 298 M (324:) s
19.2 286 M (325:) s
19.2 274 M (326:) s
52.2 274 M
(  bool foundall= true;) s
19.2 262 M (327:) s
19.2 250 M (328:) s
52.2 250 M
(  for\(string& subdir : words\){) s
19.2 238 M (329:) s
52.2 238 M
(     directory_ptr dir= dynamic_pointer_cast<directory>\(ret->contents\);) s
19.2 226 M (330:) s
52.2 226 M
(       try {) s
19.2 214 M (331:) s
52.2 214 M
(           ret = dir->dirents.at\(subdir\);) s
19.2 202 M (332:) s
52.2 202 M
(       }) s
19.2 190 M (333:) s
52.2 190 M
(       catch \(const out_of_range& err\) {) s
19.2 178 M (334:) s
52.2 178 M
(           foundall= false;) s
19.2 166 M (335:) s
52.2 166 M
(           break;) s
19.2 154 M (336:) s
52.2 154 M
(       }) s
19.2 142 M (337:) s
52.2 142 M
(  }) s
19.2 130 M (338:) s
52.2 130 M
(  if\(!foundall\){) s
19.2 118 M (339:) s
52.2 118 M
(    return nullptr;) s
19.2 106 M (340:) s
52.2 106 M
(  }) s
19.2 94 M (341:) s
52.2 94 M
(  return ret;) s
19.2 82 M (342:) s
52.2 82 M
(}) s
19.2 70 M (343:) s
19.2 58 M (344:) s
52.2 58 M
(bool inode_state::cd \(const string& path\){) s
19.2 46 M (345:) s
52.2 46 M
(   inode_ptr newCWD = pathDecode\(path\);) s
19.2 34 M (346:) s
52.2 34 M
(   if\(newCWD==nullptr\){) s
19.2 22 M (347:) s
52.2 22 M
(      err_print\("cd", path, "Directory not found"\);) s
19.2 10 M (348:) s
52.2 10 M
(     return true;) s
_R
S
%%Page: (7) 21
%%BeginPageSetup
_S
38 24 translate
/pagenum 7 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (7) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (349:) s
52.2 694 M
(   }else if\(\(*newCWD\).type\(\) == "plain"\){) s
19.2 682 M (350:) s
52.2 682 M
(      err_print\("cd", path, "Target is a plain file"\);) s
19.2 670 M (351:) s
52.2 670 M
(      return true;) s
19.2 658 M (352:) s
52.2 658 M
(   }) s
19.2 646 M (353:) s
52.2 646 M
(   else {) s
19.2 634 M (354:) s
52.2 634 M
(     cwd= newCWD;) s
19.2 622 M (355:) s
52.2 622 M
(     return false;) s
19.2 610 M (356:) s
52.2 610 M
(   }) s
19.2 598 M (357:) s
52.2 598 M
(}) s
19.2 586 M (358:) s
19.2 574 M (359:) s
52.2 574 M
(const string& inode_state::prompt\(\) const { return prompt_; }) s
19.2 562 M (360:) s
19.2 550 M (361:) s
52.2 550 M
(ostream& operator<< \(ostream& out, const inode_state& state\) {) s
19.2 538 M (362:) s
52.2 538 M
(   out << "inode_state: root = " << state.root) s
19.2 526 M (363:) s
52.2 526 M
(       << ", cwd = " << state.cwd;) s
19.2 514 M (364:) s
52.2 514 M
(   return out;) s
19.2 502 M (365:) s
52.2 502 M
(}) s
19.2 490 M (366:) s
19.2 478 M (367:) s
52.2 478 M
(inode::inode\(file_type type\): inode_nr \(next_inode_nr++\) {) s
19.2 466 M (368:) s
52.2 466 M
(   switch \(type\) {) s
19.2 454 M (369:) s
52.2 454 M
(      case file_type::PLAIN_TYPE:) s
19.2 442 M (370:) s
52.2 442 M
(           fileType = "plain";) s
19.2 430 M (371:) s
52.2 430 M
(           contents = make_shared<plain_file>\(\);) s
19.2 418 M (372:) s
52.2 418 M
(           break;) s
19.2 406 M (373:) s
52.2 406 M
(      case file_type::DIRECTORY_TYPE:) s
19.2 394 M (374:) s
52.2 394 M
(           fileType = "directory";) s
19.2 382 M (375:) s
52.2 382 M
(           contents = make_shared<directory>\(\);) s
19.2 370 M (376:) s
52.2 370 M
(           break;) s
19.2 358 M (377:) s
52.2 358 M
(   }) s
19.2 346 M (378:) s
52.2 346 M
(   DEBUGF \('i', "inode " << inode_nr << ", type = " << type\);) s
19.2 334 M (379:) s
52.2 334 M
(}) s
19.2 322 M (380:) s
19.2 310 M (381:) s
52.2 310 M
(int inode::get_inode_nr\(\) const {) s
19.2 298 M (382:) s
52.2 298 M
(   DEBUGF \('i', "inode = " << inode_nr\);) s
19.2 286 M (383:) s
52.2 286 M
(   return inode_nr;) s
19.2 274 M (384:) s
52.2 274 M
(}) s
19.2 262 M (385:) s
19.2 250 M (386:) s
52.2 250 M
(int inode::size\(\) const {) s
19.2 238 M (387:) s
52.2 238 M
(  DEBUGF \('i', "size = " << \(*contents\).size\(\)\);) s
19.2 226 M (388:) s
52.2 226 M
(  return \(*contents\).size\(\);) s
19.2 214 M (389:) s
52.2 214 M
(}) s
19.2 202 M (390:) s
19.2 190 M (391:) s
52.2 190 M
(string inode::type\(\) const {) s
19.2 178 M (392:) s
52.2 178 M
(  DEBUGF \('i', "type = " << fileType\);) s
19.2 166 M (393:) s
52.2 166 M
(  return fileType;) s
19.2 154 M (394:) s
52.2 154 M
(}) s
19.2 142 M (395:) s
_R
S
%%Page: (8) 22
%%BeginPageSetup
_S
38 24 translate
/pagenum 8 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (8) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (396:) s
19.2 682 M (397:) s
52.2 682 M
(file_error::file_error \(const string& what\):) s
19.2 670 M (398:) s
52.2 670 M
(            runtime_error \(what\) {) s
19.2 658 M (399:) s
52.2 658 M
(}) s
19.2 646 M (400:) s
19.2 634 M (401:) s
52.2 634 M
(const string& base_file::readfile\(\) const {) s
19.2 622 M (402:) s
52.2 622 M
(   throw file_error \("is a " + error_file_type\(\)\);) s
19.2 610 M (403:) s
52.2 610 M
(}) s
19.2 598 M (404:) s
19.2 586 M (405:) s
52.2 586 M
(void base_file::writefile \(const string&\) {) s
19.2 574 M (406:) s
52.2 574 M
(   throw file_error \("is a " + error_file_type\(\)\);) s
19.2 562 M (407:) s
52.2 562 M
(}) s
19.2 550 M (408:) s
19.2 538 M (409:) s
52.2 538 M
(void base_file::remove \(const string&\) {) s
19.2 526 M (410:) s
52.2 526 M
(   throw file_error \("is a " + error_file_type\(\)\);) s
19.2 514 M (411:) s
52.2 514 M
(}) s
19.2 502 M (412:) s
19.2 490 M (413:) s
52.2 490 M
(inode_ptr base_file::mkdir \(const string&\) {) s
19.2 478 M (414:) s
52.2 478 M
(   throw file_error \("is a " + error_file_type\(\)\);) s
19.2 466 M (415:) s
52.2 466 M
(}) s
19.2 454 M (416:) s
19.2 442 M (417:) s
52.2 442 M
(inode_ptr base_file::mkfile \(const string&\) {) s
19.2 430 M (418:) s
52.2 430 M
(   throw file_error \("is a " + error_file_type\(\)\);) s
19.2 418 M (419:) s
52.2 418 M
(}) s
19.2 406 M (420:) s
_R
S
%%Page: (9) 23
%%BeginPageSetup
_S
38 24 translate
/pagenum 9 def
/fname (file_sys.cpp) def
/fdir (.) def
/ftail (file_sys.cpp) def
% User defined strings:
/pagenumstr (9) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (421:) s
19.2 682 M (422:) s
52.2 682 M
(size_t plain_file::size\(\) const {) s
19.2 670 M (423:) s
52.2 670 M
(   size_t size {data.length\(\)};) s
19.2 658 M (424:) s
52.2 658 M
(   DEBUGF \('i', "size = " << size\);) s
19.2 646 M (425:) s
52.2 646 M
(   return size;) s
19.2 634 M (426:) s
52.2 634 M
(}) s
19.2 622 M (427:) s
19.2 610 M (428:) s
52.2 610 M
(const string& plain_file::readfile\(\) const {) s
19.2 598 M (429:) s
52.2 598 M
(   DEBUGF \('i', data\);) s
19.2 586 M (430:) s
52.2 586 M
(   return data;) s
19.2 574 M (431:) s
52.2 574 M
(}) s
19.2 562 M (432:) s
19.2 550 M (433:) s
52.2 550 M
(void plain_file::writefile \(const string& words\) {) s
19.2 538 M (434:) s
52.2 538 M
(   data= words;) s
19.2 526 M (435:) s
52.2 526 M
(   DEBUGF \('i', words\);) s
19.2 514 M (436:) s
52.2 514 M
(}) s
19.2 502 M (437:) s
19.2 490 M (438:) s
52.2 490 M
(size_t directory::size\(\) const {) s
19.2 478 M (439:) s
52.2 478 M
(   size_t size {dirents.size\(\)};) s
19.2 466 M (440:) s
52.2 466 M
(   DEBUGF \('i', "size = " << size\);) s
19.2 454 M (441:) s
52.2 454 M
(   return size;) s
19.2 442 M (442:) s
52.2 442 M
(}) s
19.2 430 M (443:) s
19.2 418 M (444:) s
52.2 418 M
(void directory::remove \(const string& filename\) {) s
19.2 406 M (445:) s
52.2 406 M
(   DEBUGF \('i', filename\);) s
19.2 394 M (446:) s
52.2 394 M
(}) s
19.2 382 M (447:) s
19.2 370 M (448:) s
52.2 370 M
(inode_ptr directory::mkdir \(const string& dirname\) {) s
19.2 358 M (449:) s
52.2 358 M
(   auto iter = dirents.find\(dirname\);) s
19.2 346 M (450:) s
52.2 346 M
(   if\( iter!=dirents.end\(\)\){) s
19.2 334 M (451:) s
52.2 334 M
(      return nullptr;) s
19.2 322 M (452:) s
52.2 322 M
(   }) s
19.2 310 M (453:) s
52.2 310 M
(   inode_ptr node = make_shared<inode>\(file_type::DIRECTORY_TYPE\);) s
19.2 298 M (454:) s
52.2 298 M
(   base_file_ptr fil=node->contents;) s
19.2 286 M (455:) s
52.2 286 M
(   directory_ptr dir= dynamic_pointer_cast<directory>\(fil\);) s
19.2 274 M (456:) s
52.2 274 M
(   dir -> dirents.insert\(pair<string,inode_ptr>\(".",node\)\);) s
19.2 262 M (457:) s
52.2 262 M
(   dir -> dirents.insert\(pair<string,inode_ptr>\("..",dirents.at\("."\)\)\);) s
19.2 250 M (458:) s
52.2 250 M
(   dirents.insert\(pair<string,inode_ptr>\(dirname,node\)\);) s
19.2 238 M (459:) s
52.2 238 M
(   DEBUGF \('i', dirname\);) s
19.2 226 M (460:) s
52.2 226 M
(   return node;) s
19.2 214 M (461:) s
52.2 214 M
(}) s
19.2 202 M (462:) s
19.2 190 M (463:) s
52.2 190 M
(inode_ptr directory::mkfile \(const string& filename\) {) s
19.2 178 M (464:) s
52.2 178 M
(  auto iter = dirents.find\(filename\);) s
19.2 166 M (465:) s
52.2 166 M
(  if\( iter!=dirents.end\(\)\){) s
19.2 154 M (466:) s
52.2 154 M
(     return nullptr;) s
19.2 142 M (467:) s
52.2 142 M
(  }) s
19.2 130 M (468:) s
52.2 130 M
(   inode_ptr node = make_shared<inode>\(file_type::PLAIN_TYPE\);) s
19.2 118 M (469:) s
52.2 118 M
(   base_file_ptr fil=node->contents;) s
19.2 106 M (470:) s
52.2 106 M
(   file_ptr file= dynamic_pointer_cast<plain_file>\(fil\);) s
19.2 94 M (471:) s
52.2 94 M
(   dirents.insert\(pair<string,inode_ptr>\(filename,node\)\);) s
19.2 82 M (472:) s
52.2 82 M
(   DEBUGF \('i', filename\);) s
19.2 70 M (473:) s
52.2 70 M
(   return node;) s
19.2 58 M (474:) s
52.2 58 M
(}) s
_R
S
%%Page: (1) 24
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (util.h) def
/fdir (.) def
/ftail (util.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: util.h,v 1.14 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(// util -) s
32.4 658 M (4:) s
52.2 658 M
(//    A utility class to provide various services not conveniently) s
32.4 646 M (5:) s
52.2 646 M
(//    included in other modules.) s
32.4 634 M (6:) s
32.4 622 M (7:) s
52.2 622 M
(#ifndef __UTIL_H__) s
32.4 610 M (8:) s
52.2 610 M
(#define __UTIL_H__) s
32.4 598 M (9:) s
25.8 586 M (10:) s
52.2 586 M
(#include <iostream>) s
25.8 574 M (11:) s
52.2 574 M
(#include <stdexcept>) s
25.8 562 M (12:) s
52.2 562 M
(#include <string>) s
25.8 550 M (13:) s
52.2 550 M
(#include <vector>) s
25.8 538 M (14:) s
52.2 538 M
(using namespace std;) s
25.8 526 M (15:) s
25.8 514 M (16:) s
52.2 514 M
(// Convenient type using to allow brevity of code elsewhere.) s
25.8 502 M (17:) s
25.8 490 M (18:) s
52.2 490 M
(template <typename iterator>) s
25.8 478 M (19:) s
52.2 478 M
(using range_type = pair<iterator,iterator>;) s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(using wordvec = vector<string>;) s
25.8 442 M (22:) s
52.2 442 M
(using word_range = range_type<decltype\(declval<wordvec>\(\).cbegin\(\)\)>;) s
25.8 430 M (23:) s
25.8 418 M (24:) s
52.2 418 M
(// want_echo -) s
25.8 406 M (25:) s
52.2 406 M
(//    We want to echo all of cin to cout if either cin or cout) s
25.8 394 M (26:) s
52.2 394 M
(//    is not a tty.  This helps make batch processing easier by) s
25.8 382 M (27:) s
52.2 382 M
(//    making cout look like a terminal session trace.) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(bool want_echo\(\);) s
25.8 346 M (30:) s
25.8 334 M (31:) s
52.2 334 M
(//) s
25.8 322 M (32:) s
52.2 322 M
(// main -) s
25.8 310 M (33:) s
52.2 310 M
(//    Keep track of execname and exit status.  Must be initialized) s
25.8 298 M (34:) s
52.2 298 M
(//    as the first thing done inside main.  Main should call:) s
25.8 286 M (35:) s
52.2 286 M
(//       main::execname \(argv[0]\);) s
25.8 274 M (36:) s
52.2 274 M
(//    before anything else.) s
25.8 262 M (37:) s
52.2 262 M
(//) s
25.8 250 M (38:) s
25.8 238 M (39:) s
52.2 238 M
(class exec {) s
25.8 226 M (40:) s
52.2 226 M
(   private:) s
25.8 214 M (41:) s
52.2 214 M
(      static string execname_;) s
25.8 202 M (42:) s
52.2 202 M
(      static int status_;) s
25.8 190 M (43:) s
52.2 190 M
(      static void execname \(const string& argv0\);) s
25.8 178 M (44:) s
52.2 178 M
(      friend int main \(int, char**\);) s
25.8 166 M (45:) s
52.2 166 M
(   public:) s
25.8 154 M (46:) s
52.2 154 M
(      static void status \(int status\);) s
25.8 142 M (47:) s
52.2 142 M
(      static const string& execname\(\) {return execname_; }) s
25.8 130 M (48:) s
52.2 130 M
(      static int status\(\) {return status_; }) s
25.8 118 M (49:) s
52.2 118 M
(};) s
25.8 106 M (50:) s
_R
S
%%Page: (2) 25
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (util.h) def
/fdir (.) def
/ftail (util.h) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (51:) s
25.8 682 M (52:) s
52.2 682 M
(// split -) s
25.8 670 M (53:) s
52.2 670 M
(//    Split a string into a wordvec \(as defined above\).  Any sequence) s
25.8 658 M (54:) s
52.2 658 M
(//    of chars in the delimiter string is used as a separator.  To) s
25.8 646 M (55:) s
52.2 646 M
(//    Split a pathname, use "/".  To split a shell command, use " ".) s
25.8 634 M (56:) s
25.8 622 M (57:) s
52.2 622 M
(wordvec split \(const string& line, const string& delimiter\);) s
25.8 610 M (58:) s
25.8 598 M (59:) s
52.2 598 M
(// complain -) s
25.8 586 M (60:) s
52.2 586 M
(//    Used for starting error messages.  Sets the exit status to) s
25.8 574 M (61:) s
52.2 574 M
(//    EXIT_FAILURE, writes the program name to cerr, and then) s
25.8 562 M (62:) s
52.2 562 M
(//    returns the cerr ostream.  Example:) s
25.8 550 M (63:) s
52.2 550 M
(//       complain\(\) << filename << ": some problem" << endl;) s
25.8 538 M (64:) s
25.8 526 M (65:) s
52.2 526 M
(ostream& complain\(\);) s
25.8 514 M (66:) s
25.8 502 M (67:) s
52.2 502 M
(// operator<< \(vector\) -) s
25.8 490 M (68:) s
52.2 490 M
(//    An overloaded template operator which allows vectors to be) s
25.8 478 M (69:) s
52.2 478 M
(//    printed out as a single operator, each element separated from) s
25.8 466 M (70:) s
52.2 466 M
(//    the next with spaces.  The item_t must have an output operator) s
25.8 454 M (71:) s
52.2 454 M
(//    defined for it.) s
25.8 442 M (72:) s
25.8 430 M (73:) s
52.2 430 M
(template <typename item_t>) s
25.8 418 M (74:) s
52.2 418 M
(ostream& operator<< \(ostream& out, const vector<item_t>& vec\) {) s
25.8 406 M (75:) s
52.2 406 M
(   string space = "";) s
25.8 394 M (76:) s
52.2 394 M
(   for \(const auto& item: vec\) {) s
25.8 382 M (77:) s
52.2 382 M
(      out << space << item;) s
25.8 370 M (78:) s
52.2 370 M
(      space = " ";) s
25.8 358 M (79:) s
52.2 358 M
(   }) s
25.8 346 M (80:) s
52.2 346 M
(   return out;) s
25.8 334 M (81:) s
52.2 334 M
(}) s
25.8 322 M (82:) s
25.8 310 M (83:) s
52.2 310 M
(template <typename iterator>) s
25.8 298 M (84:) s
52.2 298 M
(ostream& operator<< \(ostream& out, range_type<iterator> range\) {) s
25.8 286 M (85:) s
52.2 286 M
(   for \(auto itor = range.first; itor != range.second; ++itor\) {) s
25.8 274 M (86:) s
52.2 274 M
(      if \(itor != range.first\) out << " ";) s
25.8 262 M (87:) s
52.2 262 M
(      out << *itor;) s
25.8 250 M (88:) s
52.2 250 M
(   }) s
25.8 238 M (89:) s
52.2 238 M
(   return out;) s
25.8 226 M (90:) s
52.2 226 M
(}) s
25.8 214 M (91:) s
25.8 202 M (92:) s
52.2 202 M
(// command_error -) s
25.8 190 M (93:) s
52.2 190 M
(//    Extend runtime_error for throwing exceptions related to this) s
25.8 178 M (94:) s
52.2 178 M
(//    program.) s
25.8 166 M (95:) s
25.8 154 M (96:) s
52.2 154 M
(class command_error: public runtime_error {) s
25.8 142 M (97:) s
52.2 142 M
(   public:) s
25.8 130 M (98:) s
52.2 130 M
(      explicit command_error \(const string& what\);) s
25.8 118 M (99:) s
52.2 118 M
(};) s
19.2 106 M (100:) s
19.2 94 M (101:) s
52.2 94 M
(#endif) s
19.2 82 M (102:) s
_R
S
%%Page: (1) 26
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (util.cpp) def
/fdir (.) def
/ftail (util.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: util.cpp,v 1.15 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <cstdlib>) s
32.4 658 M (4:) s
52.2 658 M
(#include <unistd.h>) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(using namespace std;) s
32.4 622 M (7:) s
32.4 610 M (8:) s
52.2 610 M
(#include "util.h") s
32.4 598 M (9:) s
52.2 598 M
(#include "debug.h") s
25.8 586 M (10:) s
25.8 574 M (11:) s
52.2 574 M
(bool want_echo\(\) {) s
25.8 562 M (12:) s
52.2 562 M
(   constexpr int CIN_FD {0};) s
25.8 550 M (13:) s
52.2 550 M
(   constexpr int COUT_FD {1};) s
25.8 538 M (14:) s
52.2 538 M
(   bool cin_is_not_a_tty = not isatty \(CIN_FD\);) s
25.8 526 M (15:) s
52.2 526 M
(   bool cout_is_not_a_tty = not isatty \(COUT_FD\);) s
25.8 514 M (16:) s
52.2 514 M
(   DEBUGF \('u', "cin_is_not_a_tty = " << cin_is_not_a_tty) s
25.8 502 M (17:) s
52.2 502 M
(          << ", cout_is_not_a_tty = " << cout_is_not_a_tty\);) s
25.8 490 M (18:) s
52.2 490 M
(   return cin_is_not_a_tty or cout_is_not_a_tty;) s
25.8 478 M (19:) s
52.2 478 M
(}) s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(string exec::execname_; // Must be initialized from main\(\).) s
25.8 442 M (22:) s
52.2 442 M
(int exec::status_ = EXIT_SUCCESS;) s
25.8 430 M (23:) s
25.8 418 M (24:) s
52.2 418 M
(string basename \(const string &arg\) { ) s
25.8 406 M (25:) s
52.2 406 M
(   return arg.substr \(arg.find_last_of \('/'\) + 1\);) s
25.8 394 M (26:) s
52.2 394 M
(}) s
25.8 382 M (27:) s
25.8 370 M (28:) s
52.2 370 M
(void exec::execname \(const string& argv0\) {) s
25.8 358 M (29:) s
52.2 358 M
(   execname_ = basename \(argv0\);) s
25.8 346 M (30:) s
52.2 346 M
(   cout << boolalpha;) s
25.8 334 M (31:) s
52.2 334 M
(   cerr << boolalpha;) s
25.8 322 M (32:) s
52.2 322 M
(   DEBUGF \('u', "execname = " << execname_\);) s
25.8 310 M (33:) s
52.2 310 M
(}) s
25.8 298 M (34:) s
25.8 286 M (35:) s
52.2 286 M
(void exec::status \(int status\) {) s
25.8 274 M (36:) s
52.2 274 M
(   if \(status_ < status\) status_ = status;) s
25.8 262 M (37:) s
52.2 262 M
(}) s
25.8 250 M (38:) s
_R
S
%%Page: (2) 27
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (util.cpp) def
/fdir (.) def
/ftail (util.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (39:) s
25.8 682 M (40:) s
52.2 682 M
(wordvec split \(const string& line, const string& delimiters\) {) s
25.8 670 M (41:) s
52.2 670 M
(   wordvec words;) s
25.8 658 M (42:) s
52.2 658 M
(   size_t end = 0;) s
25.8 646 M (43:) s
25.8 634 M (44:) s
52.2 634 M
(   // Loop over the string, splitting out words, and for each word) s
25.8 622 M (45:) s
52.2 622 M
(   // thus found, append it to the output wordvec.) s
25.8 610 M (46:) s
52.2 610 M
(   for \(;;\) {) s
25.8 598 M (47:) s
52.2 598 M
(      size_t start = line.find_first_not_of \(delimiters, end\);) s
25.8 586 M (48:) s
52.2 586 M
(      if \(start == string::npos\) break;) s
25.8 574 M (49:) s
52.2 574 M
(      end = line.find_first_of \(delimiters, start\);) s
25.8 562 M (50:) s
52.2 562 M
(      words.push_back \(line.substr \(start, end - start\)\);) s
25.8 550 M (51:) s
52.2 550 M
(   }) s
25.8 538 M (52:) s
52.2 538 M
(   DEBUGF \('u', words\);) s
25.8 526 M (53:) s
52.2 526 M
(   return words;) s
25.8 514 M (54:) s
52.2 514 M
(}) s
25.8 502 M (55:) s
25.8 490 M (56:) s
52.2 490 M
(ostream& complain\(\) {) s
25.8 478 M (57:) s
52.2 478 M
(   exec::status \(EXIT_FAILURE\);) s
25.8 466 M (58:) s
52.2 466 M
(   cerr << exec::execname\(\) << ": ";) s
25.8 454 M (59:) s
52.2 454 M
(   return cerr;) s
25.8 442 M (60:) s
52.2 442 M
(}) s
25.8 430 M (61:) s
25.8 418 M (62:) s
52.2 418 M
(command_error::command_error \(const string& what\):) s
25.8 406 M (63:) s
52.2 406 M
(            runtime_error \(what\) {) s
25.8 394 M (64:) s
52.2 394 M
(}) s
_R
S
%%Page: (1) 28
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (main.cpp) def
/fdir (.) def
/ftail (main.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: main.cpp,v 1.11 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <cstdlib>) s
32.4 658 M (4:) s
52.2 658 M
(#include <iostream>) s
32.4 646 M (5:) s
52.2 646 M
(#include <string>) s
32.4 634 M (6:) s
52.2 634 M
(#include <utility>) s
32.4 622 M (7:) s
52.2 622 M
(#include <unistd.h>) s
32.4 610 M (8:) s
32.4 598 M (9:) s
52.2 598 M
(using namespace std;) s
25.8 586 M (10:) s
25.8 574 M (11:) s
52.2 574 M
(#include "commands.h") s
25.8 562 M (12:) s
52.2 562 M
(#include "debug.h") s
25.8 550 M (13:) s
52.2 550 M
(#include "file_sys.h") s
25.8 538 M (14:) s
52.2 538 M
(#include "util.h") s
25.8 526 M (15:) s
25.8 514 M (16:) s
52.2 514 M
(// scan_options) s
25.8 502 M (17:) s
52.2 502 M
(//    Options analysis:  The only option is -Dflags. ) s
25.8 490 M (18:) s
25.8 478 M (19:) s
52.2 478 M
(void scan_options \(int argc, char** argv\) {) s
25.8 466 M (20:) s
52.2 466 M
(   opterr = 0;) s
25.8 454 M (21:) s
52.2 454 M
(   for \(;;\) {) s
25.8 442 M (22:) s
52.2 442 M
(      int option = getopt \(argc, argv, "@:"\);) s
25.8 430 M (23:) s
52.2 430 M
(      if \(option == EOF\) break;) s
25.8 418 M (24:) s
52.2 418 M
(      switch \(option\) {) s
25.8 406 M (25:) s
52.2 406 M
(         case '@':) s
25.8 394 M (26:) s
52.2 394 M
(            debugflags::setflags \(optarg\);) s
25.8 382 M (27:) s
52.2 382 M
(            break;) s
25.8 370 M (28:) s
52.2 370 M
(         default:) s
25.8 358 M (29:) s
52.2 358 M
(            complain\(\) << "-" << static_cast<char> \(option\)) s
25.8 346 M (30:) s
52.2 346 M
(                       << ": invalid option" << endl;) s
25.8 334 M (31:) s
52.2 334 M
(            break;) s
25.8 322 M (32:) s
52.2 322 M
(      }) s
25.8 310 M (33:) s
52.2 310 M
(   }) s
25.8 298 M (34:) s
52.2 298 M
(   if \(optind < argc\) {) s
25.8 286 M (35:) s
52.2 286 M
(      complain\(\) << "operands not permitted" << endl;) s
25.8 274 M (36:) s
52.2 274 M
(   }) s
25.8 262 M (37:) s
52.2 262 M
(}) s
25.8 250 M (38:) s
_R
S
%%Page: (2) 29
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (main.cpp) def
/fdir (.) def
/ftail (main.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (39:) s
25.8 682 M (40:) s
52.2 682 M
(// main -) s
25.8 670 M (41:) s
52.2 670 M
(//    Main program which loops reading commands until end of file.) s
25.8 658 M (42:) s
25.8 646 M (43:) s
52.2 646 M
(int main \(int argc, char** argv\) {) s
25.8 634 M (44:) s
52.2 634 M
(   exec::execname \(argv[0]\);) s
25.8 622 M (45:) s
52.2 622 M
(   cout << boolalpha;  // Print false or true instead of 0 or 1.) s
25.8 610 M (46:) s
52.2 610 M
(   cerr << boolalpha;) s
25.8 598 M (47:) s
52.2 598 M
(   cout << argv[0] << " build " << __DATE__ << " " << __TIME__ << endl;) s
25.8 586 M (48:) s
52.2 586 M
(   scan_options \(argc, argv\);) s
25.8 574 M (49:) s
52.2 574 M
(   bool need_echo = want_echo\(\);) s
25.8 562 M (50:) s
52.2 562 M
(   inode_state state;) s
25.8 550 M (51:) s
52.2 550 M
(   try {) s
25.8 538 M (52:) s
52.2 538 M
(      for \(;;\) {) s
25.8 526 M (53:) s
52.2 526 M
(         try {) s
25.8 514 M (54:) s
52.2 514 M
(            // Read a line, break at EOF, and echo print the prompt) s
25.8 502 M (55:) s
52.2 502 M
(            // if one is needed.) s
25.8 490 M (56:) s
52.2 490 M
(            cout << state.prompt\(\);) s
25.8 478 M (57:) s
52.2 478 M
(            string line;) s
25.8 466 M (58:) s
52.2 466 M
(            getline \(cin, line\);) s
25.8 454 M (59:) s
52.2 454 M
(            if \(cin.eof\(\)\) {) s
25.8 442 M (60:) s
25.8 430 M (61:) s
52.2 430 M
(               if \(need_echo\) cout << "^D";) s
25.8 418 M (62:) s
52.2 418 M
(               cout << endl;) s
25.8 406 M (63:) s
52.2 406 M
(               DEBUGF \('y', "EOF"\);) s
25.8 394 M (64:) s
52.2 394 M
(               break;) s
25.8 382 M (65:) s
52.2 382 M
(            }) s
25.8 370 M (66:) s
52.2 370 M
(            if \(need_echo\) cout << line << endl;) s
25.8 358 M (67:) s
52.2 358 M
(   ) s
25.8 346 M (68:) s
52.2 346 M
(            // Split the line into words and lookup the appropriate) s
25.8 334 M (69:) s
52.2 334 M
(            // function.  Complain or call it.) s
25.8 322 M (70:) s
52.2 322 M
(            wordvec words = split \(line, " \\t"\);) s
25.8 310 M (71:) s
52.2 310 M
(            DEBUGF \('y', "words = " << words\);) s
25.8 298 M (72:) s
52.2 298 M
(            command_fn fn = find_command_fn \(words.at\(0\)\);) s
25.8 286 M (73:) s
52.2 286 M
(            fn \(state, words\);) s
25.8 274 M (74:) s
52.2 274 M
(         }catch \(command_error& error\) {) s
25.8 262 M (75:) s
52.2 262 M
(            // If there is a problem discovered in any function, an) s
25.8 250 M (76:) s
52.2 250 M
(            // exn is thrown and printed here.) s
25.8 238 M (77:) s
52.2 238 M
(            complain\(\) << error.what\(\) << endl;) s
25.8 226 M (78:) s
52.2 226 M
(         }) s
25.8 214 M (79:) s
52.2 214 M
(      }) s
25.8 202 M (80:) s
52.2 202 M
(   } catch \(ysh_exit&\) {) s
25.8 190 M (81:) s
52.2 190 M
(      // This catch intentionally left blank.) s
25.8 178 M (82:) s
52.2 178 M
(   }) s
25.8 166 M (83:) s
25.8 154 M (84:) s
52.2 154 M
(   return exit_status_message\(\);) s
25.8 142 M (85:) s
52.2 142 M
(}) s
25.8 130 M (86:) s
_R
S
%%Page: (1) 30
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(# $Id: Makefile,v 1.34 2019-10-27 20:59:20-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(MKFILE      = Makefile) s
32.4 658 M (4:) s
52.2 658 M
(DEPFILE     = ${MKFILE}.dep) s
32.4 646 M (5:) s
52.2 646 M
(NOINCL      = ci clean spotless) s
32.4 634 M (6:) s
52.2 634 M
(NEEDINCL    = ${filter ${NOINCL}, ${MAKECMDGOALS}}) s
32.4 622 M (7:) s
52.2 622 M
(GMAKE       = ${MAKE} --no-print-directory) s
32.4 610 M (8:) s
52.2 610 M
(GPPWARN     = -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast) s
32.4 598 M (9:) s
52.2 598 M
(GPPOPTS     = ${GPPWARN} -fdiagnostics-color=never) s
25.8 586 M (10:) s
52.2 586 M
(COMPILECPP  = g++ -std=gnu++17 -g -O0 ${GPPOPTS}) s
25.8 574 M (11:) s
52.2 574 M
(MAKEDEPCPP  = g++ -std=gnu++17 -MM ${GPPOPTS}) s
25.8 562 M (12:) s
52.2 562 M
(UTILBIN     = /afs/cats.ucsc.edu/courses/cse111-wm/bin) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(MODULES     = commands debug file_sys util) s
25.8 526 M (15:) s
52.2 526 M
(CPPHEADER   = ${MODULES:=.h}) s
25.8 514 M (16:) s
52.2 514 M
(CPPSOURCE   = ${MODULES:=.cpp} main.cpp) s
25.8 502 M (17:) s
52.2 502 M
(EXECBIN     = yshell) s
25.8 490 M (18:) s
52.2 490 M
(OBJECTS     = ${CPPSOURCE:.cpp=.o}) s
25.8 478 M (19:) s
52.2 478 M
(MODULESRC   = ${foreach MOD, ${MODULES}, ${MOD}.h ${MOD}.cpp}) s
25.8 466 M (20:) s
52.2 466 M
(OTHERSRC    = ${filter-out ${MODULESRC}, ${CPPHEADER} ${CPPSOURCE}}) s
25.8 454 M (21:) s
52.2 454 M
(ALLSOURCES  = ${MODULESRC} ${OTHERSRC} ${MKFILE}) s
25.8 442 M (22:) s
52.2 442 M
(LISTING     = Listing.ps) s
25.8 430 M (23:) s
25.8 418 M (24:) s
52.2 418 M
(all : ${EXECBIN}) s
25.8 406 M (25:) s
25.8 394 M (26:) s
52.2 394 M
(${EXECBIN} : ${OBJECTS}) s
25.8 382 M (27:) s
52.2 382 M
(        ${COMPILECPP} -o $@ ${OBJECTS}) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(%.o : %.cpp) s
25.8 346 M (30:) s
52.2 346 M
(        - ${UTILBIN}/cpplint.py.perl $<) s
25.8 334 M (31:) s
52.2 334 M
(        - ${UTILBIN}/checksource $<) s
25.8 322 M (32:) s
52.2 322 M
(        ${COMPILECPP} -c $<) s
25.8 310 M (33:) s
25.8 298 M (34:) s
52.2 298 M
(ci : ${ALLSOURCES}) s
25.8 286 M (35:) s
52.2 286 M
(        - ${UTILBIN}/checksource ${ALLSOURCES}) s
25.8 274 M (36:) s
52.2 274 M
(        ${UTILBIN}/cid + ${ALLSOURCES}) s
25.8 262 M (37:) s
25.8 250 M (38:) s
52.2 250 M
(lis : ${ALLSOURCES}) s
25.8 238 M (39:) s
52.2 238 M
(        ${UTILBIN}/mkpspdf ${LISTING} ${ALLSOURCES} ${DEPFILE}) s
25.8 226 M (40:) s
25.8 214 M (41:) s
52.2 214 M
(clean :) s
25.8 202 M (42:) s
52.2 202 M
(        - rm ${OBJECTS} ${DEPFILE} core ${EXECBIN}.errs) s
25.8 190 M (43:) s
25.8 178 M (44:) s
52.2 178 M
(spotless : clean) s
25.8 166 M (45:) s
52.2 166 M
(        - rm ${EXECBIN} ${LISTING} ${LISTING:.ps=.pdf}) s
25.8 154 M (46:) s
_R
S
%%Page: (2) 31
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (47:) s
25.8 682 M (48:) s
52.2 682 M
(dep : ${CPPSOURCE} ${CPPHEADER}) s
25.8 670 M (49:) s
52.2 670 M
(        @ echo "# ${DEPFILE} created `LC_TIME=C date`" >${DEPFILE}) s
25.8 658 M (50:) s
52.2 658 M
(        ${MAKEDEPCPP} ${CPPSOURCE} >>${DEPFILE}) s
25.8 646 M (51:) s
25.8 634 M (52:) s
52.2 634 M
(${DEPFILE} : ${MKFILE}) s
25.8 622 M (53:) s
52.2 622 M
(        @ touch ${DEPFILE}) s
25.8 610 M (54:) s
52.2 610 M
(        ${GMAKE} dep) s
25.8 598 M (55:) s
25.8 586 M (56:) s
52.2 586 M
(again :) s
25.8 574 M (57:) s
52.2 574 M
(        ${GMAKE} spotless dep ci all lis) s
25.8 562 M (58:) s
25.8 550 M (59:) s
52.2 550 M
(ifeq \(${NEEDINCL}, \)) s
25.8 538 M (60:) s
52.2 538 M
(include ${DEPFILE}) s
25.8 526 M (61:) s
52.2 526 M
(endif) s
25.8 514 M (62:) s
_R
S
%%Page: (1) 32
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile.dep) def
/fdir (.) def
/ftail (Makefile.dep) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/27/19) def
/modtimestr (21:05:44) def
/user_header_p true def
/user_header_left_str (~/cse111/cse111/Assignment2/code) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(# Makefile.dep created Sun Oct 27 21:05:44 PDT 2019) s
32.4 682 M (2:) s
52.2 682 M
(commands.o: commands.cpp commands.h file_sys.h util.h debug.h) s
32.4 670 M (3:) s
52.2 670 M
(debug.o: debug.cpp debug.h util.h) s
32.4 658 M (4:) s
52.2 658 M
(file_sys.o: file_sys.cpp debug.h file_sys.h util.h) s
32.4 646 M (5:) s
52.2 646 M
(util.o: util.cpp util.h debug.h) s
32.4 634 M (6:) s
52.2 634 M
(main.o: main.cpp commands.h file_sys.h util.h debug.h) s
_R
S
%%Trailer
%%Pages: 32
%%DocumentNeededResources: font Times-Roman Courier-Bold Times-Bold 
%%EOF
