Error: LetStmt inherits Stmt>>interp: (LetStmt #n (NumExpr 100.0))
Error: DimStmt inherits Stmt>>interp: (DimStmt #sieve (VarExpr #n))
Error: LetStmt inherits Stmt>>interp: (LetStmt #i (NumExpr 2.0))
Error: LetStmt inherits Stmt>>interp: (LetStmt (#aput #sieve #i ) (NumExpr 1.0))
Error: LetStmt inherits Stmt>>interp: (LetStmt #i (BinopExpr #+ (VarExpr #i) (NumExpr 1.0)))
Error: IfStmt inherits Stmt>>interp: (IfStmt (BinopExpr #< (VarExpr #i) (VarExpr #n)) #init)
Error: LetStmt inherits Stmt>>interp: (LetStmt #prime (NumExpr 2.0))
Error: IfStmt inherits Stmt>>interp: (IfStmt (BinopExpr #= (BinopExpr #aget (VarExpr #sieve) (VarExpr #prime)) (NumExpr 0.0)) #next)
 0.0
Error: LetStmt inherits Stmt>>interp: (LetStmt #i (BinopExpr #* (VarExpr #prime) (NumExpr 2.0)))
Error: GotoStmt inherits Stmt>>interp: (GotoStmt #punch)
Error: LetStmt inherits Stmt>>interp: (LetStmt (#aput #sieve #i ) (NumExpr 0.0))
Error: LetStmt inherits Stmt>>interp: (LetStmt #i (BinopExpr #+ (VarExpr #i) (VarExpr #prime)))
Error: IfStmt inherits Stmt>>interp: (IfStmt (BinopExpr #< (VarExpr #i) (VarExpr #n)) #loop)
Error: LetStmt inherits Stmt>>interp: (LetStmt #prime (BinopExpr #+ (VarExpr #prime) (NumExpr 1.0)))
Error: IfStmt inherits Stmt>>interp: (IfStmt (BinopExpr #< (VarExpr #prime) (VarExpr #n)) #primes)
